$(function() {
    let textarea = $('#paper')
    $('#sample1').click( function() {
        textarea.html('ЭКСПЕРИМЕНТАЛЬНОЕ ИССЛЕДОВАНИЕ КРИТЕРИЕВ СООТВЕТСТВИЯ ТЕКСТА НАУЧНОМУ СТИЛЮ\n' +
            'В данной статье приведено экспериментальное исследование критериев соответствия текста научному стилю. Были исследованы 3 числовых критерия: показатель повторений в текстовом документе ключевых слов и фраз, процентное соотношение стоп-слов и общего количества слов в тексте, отклонение графика частоты слов в тексте от идеального графика по Ципфу; полученных в предыдущей работе, в которой были рассмотрены возможности автоматизации процесса проверки научных статей на соответствие научному стилю, и в результате которой было показано, что часть критериев проверки может быть автоматизирована. Исследование проводилось с использованием исполняемого сценария, проверяющего текст по нескольким критериям, разработанного ранее и описанного также в предыдущей работе. В результате экспериментального исследования на выборке из 2500 статей, опубликованных в источниках ВАК/РИНЦ, были получены распределения значений критериев, которые были проверены на нормальность по нескольким критериям, а также на корреляцию между собой. В результате анализа этих данных были получены и математически обоснованы пороговые значения критериев, которые затем были использованы на тестовой выборке, состоящей из бакалаврских работ студентов СПбГЭТУ «ЛЭТИ», псевдонаучной статьи «Корчеватель», технических статей из интернет IT-сообщества «Хабр», «Капитала» Карла Маркса и ряда других текстов, не относящихся к научному стилю. Было сформулировано необходимое, но не достаточное условие соответствия статьи научному стилю.\n' +
            'Ключевые слова: Научный стиль, анализ текста, закон Ципфа, автоматизация рецензирования научных статей.\n' +
            '\n' +
            'Введение\n' +
            'Соответствие статьи научному стилю является одним из основных критериев принятия статьи к публикации. В текущем виде, процесс проверки представляет собой отправку статьи на рецензирование, ожидание ответа, исправление недочетов и отправка на повторную проверку – данные этапы могут занимать достаточно много времени. В связи с этим, автоматизация данного процесса является актуальной задачей, позволяющей значительно ускорить процесс выявления ошибок для исправления, и в следствие этого ускорить сам процесс публикации статьи, а также ускорить обучение начинающих авторов. В соответствие с этим возникает задача исследования возможности автоматизации процесса проверки научных статей на соответствие научному стилю.\n' +
            'Обзор предметной области\n' +
            'Научный стиль - наиболее строгий стиль речи, используемый для написания научных статей. Характеризуется использованием научной терминологии, исключая жаргонизмы. Научный стиль не допускает личного изложения [1]. Проверяя текст на соответствие научному стилю, следует в первую очередь реализовать и базовую проверку на качество текста. К такого рода анализу можно отнести SEO-анализ. SEO (search engine optimization) анализ [2-3] популярен и актуален в связи с необходимостью продвижения ресурсов, товаров и услуг в сети Интернет. SEO анализ текста дает возможность понять, насколько часто употребляются ключевые слова в тексте, как много в тексте слов, не имеющих смысловой нагрузки и другое.\n' +
            'SEO-анализе вводит следующие термины для двух критериев, которые проверяются в данной работе:\n' +
            'Тошнота – это показатель повторений в текстовом документе ключевых слов и фраз. Синонимом тошноты является термин плотность [3]. Вода - процентное соотношение стоп-слов и общего количества слов в тексте [3]. Так как эти критерии вычисляемы, то можно автоматизировать их получение.\n' +
            'Так же существует эмпирическая закономерность распределения частоты слов естественного языка - Закон Ципфа: если все слова языка или достаточно длинного текста упорядочить по убыванию частоты их использования, то частота n-го слова в таком списке окажется приблизительно обратно пропорциональной его порядковому номеру n [4-5]. Соответствие распределения слов в тексте закону Ципфа говорит об уровне его естественности. Расчет этого критерия так же можно автоматизировать. В предыдущей работе [7] был проведен более детальный обзор пригодности данных критериев к задачам автоматической проверки качества стиля статей.\n' +
            'Помимо описанных числовых критериев важными показателями качества научной статьи являются её экспертность и полезность. На данный момент верификация этих критериев возможна только силами человека, однако ведутся разработки инструментов, способных выполнить данную задачу с помощью методов машинного обучения [6]. Недостатком подобных систем является сложность настройки, необходимость больших обучающих выборок и узкая ориентация в смысле предметной области.\n' +
            'Проблема\n' +
            'Результатом предыдущей работы [7] стало определение основных числовых критериев проверки статьи на соответствие научному стилю. Для удобства обозначим данные критерии:\n' +
            '    • Тошнота или уровень ключевых слов в тексте – ,\n' +
            '    • Уровень воды в тексте или процентное соотношение стоп-слов и общего количества слов в тексте – ,\n' +
            '    • Значение отклонения текста статьи от идеальной кривой по Ципфу [4-5] – .\n' +
            'Однако, для использования числовых критериев для оценки качества статьи, необходимо установить, как качество статьи связано со значениями этих числовых критериев. Поэтому целью данной работы является формулировка числового критерия соответствия текста научному стилю.\n' +
            'Решение\n' +
            'Для решения поставленной проблемы необходимо исследовать взаимосвязь между качеством научного текста и значениями критериев ,  и . Поскольку требования научного стиля плохо формализуемы, то будем рассматривать экспериментальные свидетельства качества научных текстов — факты публикации определенных текстах в научных изданиях индексируемых в ВАК [8] и РИНЦ [9].  Для простоты анализа будем считать, что качество научной статьи можно выразить булевой переменной (1 - текст соответствует нормам научного стиля, 0 - текст не соответствует нормам научного стиля). Рассмотрим, статистические свойства распределений значений критериев  ,  и  для научных статей, опубликованных в изданиях ВАК и/или РИНЦ. Для получения данных был использован исполняемый сценарий, разработанный ранее и описанных в предыдущей работе [7], с помощью которого\n' +
            'Была исследована выборка на выборке из 2500 статей. В результате работы исполняемого сценария были получены значения числовых критериев по каждой из статей и оценены их статистические свойства.\n' +
            'Для оценки статистических свойств знаний критериев на неопубликованных статьях, было принято допущение смоделировать статьи, несоответствующие научному стилю, с помощью дипломных работ, поскольку редакционная этика большинства научных изданий запрещает раскрытие рецензий и текстов опубликованных работ.  В качестве выборки дипломных работ были рассмотрены 80 бакалаврских работ студентов СПбГЭТУ "ЛЭТИ" 2016 и 2017 годов выпуска, так как их авторы с большей вероятностью обладают низким уровнем навыка подготовки научных текстов, нежели магистранты и аспиранты.\n' +
            'Получение выборки статей\n' +
            'Выборка из 2500 статей была получена с помощью другого исполняемого сценария [10], который выполняет веб-скрэпинг [11] научной интернет-библиотеки "Киберленика" [12]. Были загружены и проанализированы статьи технической направленности, специальностей «Информатика» и «Вычислительная техника», опубликованные в изданиях ВАК и/или РИНЦ.\n' +
            'Исследование\n' +
            'В рамках исследования проверялась гипотеза о том, что качество научной статьи влияет на значения ранее определенных числовых критериев, а также то, что полученная выборка значений будет соответствовать нормальному распределению.\n' +
            'Исследование на выборке из 2500 прошедших рецензирование и опубликованных статей позволит получить математические параметры распределений, что позволит установить пороговые значения числовых критериев для статей хорошего качества.\n' +
            '\n' +
            'Подчинение числовых критериев нормальному распределению\n' +
            '\n' +
            'Рисунок 1 – Гистограмма распределения значений уровня ключевых слов в тексте статей из выборки\n' +
            '\n' +
            'Рисунок 2 – Гистограмма распределения значений уровня водности текста статей из выборки\n' +
            '\n' +
            'Рисунок 3 – Гистограмма распределения значений отклонения от идеальной кривой по Ципфу текста статей из выборки\n' +
            'Из рис. 1-3 видно, что у каждого из распределений наблюдается четкий пик и большинство значений сконцентрированы вокруг него симметрично, в связи с чем можно предположить, что распределения нормальные. Для доказательства воспользуемся тремя тестами нормальности: критерий Шапиро-Уилка [13], критерий Колмогорова-Смирнова [14], критерий Андерсона-Дарлинга [15]. В каждом из тестов проверяется нулевая гипотеза [16], о том, что каждая выборка получена из нормального распределения. Так, нулевая гипотеза считается верной до того момента, пока нельзя доказать обратное. Статистическая значимость [16] для тестов равна 0,05. P-значение [17] — величина, используемая при тестировании статистических гипотез. Фактически это вероятность ошибки при отклонении нулевой гипотезы.\n' +
            'Использовалась [18] реализация тестов из статистической библиотеки SciPy [19]. На выходе каждый тест выдает два значения – D (Статистика критерия для эмпирической функции распределения [14]) и P-значение. В случае, если значение P-значение близко к 0, или значительно меньше D – нулевая гипотеза не может быть отвергнута.\n' +
            'Результаты по каждому числовому критерию представлены в табл. 1-3:\n' +
            'Таблица 1 - результаты тестов для выборки значений уровня ключевых слов в тексте\n' +
            'Критерий\n' +
            'D\n' +
            'P-значение\n' +
            'Шапиро\n' +
            '0.967\n' +
            '1.407e-23\n' +
            'Колмогоров-Смирнов\n' +
            '0.309\n' +
            '0.0\n' +
            'Андерсон-Дарлинг\n' +
            '8.293\n' +
            '0.787\n' +
            'Таблица 2 - результаты тестов для выборки значений водности текста\n' +
            'Критерий\n' +
            'test-statistics\n' +
            'p-value\n' +
            'Шапиро\n' +
            '0.942\n' +
            '3.815e-30\n' +
            'Колмогоров-Смирнов\n' +
            '0.229\n' +
            '0.0\n' +
            'Андерсон-Дарлинг\n' +
            '14.957\n' +
            '0.787\n' +
            'Таблица 3 - результаты тестов для выборки значений отклонения текста от идеальной кривой по Ципфу\n' +
            'Критерий\n' +
            'D\n' +
            'P-значение\n' +
            'Шапиро\n' +
            '0.864\n' +
            '3.512e-42\n' +
            'Колмогоров-Смирнов\n' +
            '0.129\n' +
            '0.0\n' +
            'Андерсон-Дарлинг\n' +
            '28.732\n' +
            '0.787\n' +
            '\n' +
            'Как видно из результатов тестов – нет поводов отклонить нулевую гипотезу для каждой выборки, то есть можно считать, что каждый числовой критерий подчиняется нормальному закону распределения.\n' +
            'В таблице 4 представлены математическое ожидание и дисперсия каждой из выборок:\n' +
            'Таблица 4 – Характеристики выборок\n' +
            'Выборка\n' +
            'Мат. ожидание\n' +
            'Дисперсия\n' +
            '\n' +
            '9.822\n' +
            '3.902\n' +
            '\n' +
            '17.145\n' +
            '3.082\n' +
            '\n' +
            '7.396\n' +
            '2.069\n' +
            'Так как распределения можно считать нормальными, то, согласно эмпирическому правилу [20], более 2/3 распределения будет содержаться в следующем интервале\n' +
            ', где μ – среднее значение выборки, а σ – среднеквадратичное отклонение.\n' +
            'На основе этих данных были установлены интервалы для каждого из числовых критериев:\n' +
            'Таблица 5 – Установленные интервалы\n' +
            'Критерий\n' +
            'Интервал\n' +
            '\n' +
            '~ [6, 14]\n' +
            '\n' +
            '~ [14, 20]\n' +
            '\n' +
            '~ [5.5, 9.5]\n' +
            'Независимость числовых критериев\n' +
            'Независимость числовых критериев друг от друга показывает ценность каждого из них в отдельности – ни один из критериев не дублирует уже известную информацию. Для доказательства этого была вычислена матрица ковариации. Был использован линейный коэффициент корреляции (коэффициент корреляции Пирсона) для расчета корреляции числовых критериев на основе полученных выборок:\n' +
            '\n' +
            '                                          (1)\n' +
            'где X и Y – значения критериев статьи, σ – среднеквадратичное отклонение,  - ковариация X и Y, и  - средние значения выборок.\n' +
            'Полученная матрица ковариации:\n' +
            '                                                          (2)\n' +
            'Коэффициент корреляции Пирсона может принимать значения от -1 до 1, где 0 означает полную независимость переменных друг от друга. Полученный коэффициент корреляции между  и  равен -0.07, а между  и  равен 0.01, что позволяет утверждать о независимости данных критериев. Между критериями  и наблюдается незначительная зависимость, что связано с учетом количества ключевых слов при вычислении обоих критериев.\n' +
            '\n' +
            'Запуски на тестовой выборке и других текстах\n' +
            'Для проверки адекватности полученных интервалов и формулировки критерия принятия решения о соответствии научному стилю, было проведено оценивание 80 дипломных бакалаврских работ студентов СПбГЭТУ «ЛЭТИ» кафедры МОЭВМ 2016 и 2017 годов. Кафедрой были предоставлены оценки данных работ, что позволит сравнить их с результатами анализа критериев, и подсчитать количество ошибок 1 и 2 рода [21]. Примем допущение о том, что качество текста дипломной работы определяет ее оценку.\n' +
            'Перед сравнением примем следующие условия оценки работ с помощью анализа критериев:\n' +
            'Таблица 6 – Условия оценки работ\n' +
            'Оценка\n' +
            'Количество критериев, попадающих в интервал\n' +
            '5\n' +
            '\n' +
            '4\n' +
            '\n' +
            '3\n' +
            '\n' +
            'В ходе проверки статей было выявлено 28 ошибок 1 или 2 рода, то есть в 65% случаев оценка по анализу критериев совпала с оценкой, поставленной аттестационной комиссией. Таким образом можно сформулировать следующий критерий принятия решений о качестве статьи\n' +
            '                                     (3),\n' +
            'то есть все три числовых критерия должны попадать в установленные интервалы. Данное условие нужно считать необходимым, но не достаточным, в связи отсутствием анализа полезности содержания статьи.\n' +
            'Для оценки корректности критерия, рассмотрим его работу на текстах других жанров:\n' +
            '    • работа «Корчеватель» [22-23] – сгенерированная в научном стиле, не имеющая смысла статья, используемая как пример формально корректного, но бессмысленного научного текста;\n' +
            '    • популярные статьи в it-сообществе Хабр [28]: «Моё разочарование в софте» [24], «Наши с вами персональные данные ничего не стоят» [25], «Рассказ о том, как я ворую номера кредиток и пароли у посетителей ваших сайтов» [26], «Трехмерный движок на формулах Excel для чайников» [27];\n' +
            '    • первый том «Капитала» Карла Маркса;\n' +
            '    • роман «Идиот» Фёдора Достоевского;\n' +
            '    • роман-поэма «Мёртвые души» Николая Гоголя;\n' +
            '    • роман «Путешествие к центру Земли» Жюля Верна.\n' +
            'Результаты оценки представлены в таблице 7:\n' +
            'Таблица 7 – Результаты оценки текстов\n' +
            'Текст\n' +
            '\n' +
            '\n' +
            '\n' +
            '\n' +
            '\n' +
            '\n' +
            'Псевдонаучная статья «Корчеватель»\n' +
            '10.38\n' +
            'Да\n' +
            '18.50\n' +
            'Да\n' +
            '6.84\n' +
            'Да\n' +
            'Интернет-статья «Моё разочарование в софте»\n' +
            '3.66\n' +
            'Нет\n' +
            '31.68\n' +
            'Нет\n' +
            '5.35\n' +
            'Нет\n' +
            'Интернет-статья «Наши с вами персональные данные ничего не стоят»\n' +
            '10.56\n' +
            'Да\n' +
            '32.10\n' +
            'Нет\n' +
            '6.84\n' +
            'Да\n' +
            'Интернет-статья «Рассказ о том, как я ворую номера кредиток и пароли у посетителей ваших сайтов»\n' +
            '6.61\n' +
            'Да\n' +
            '36.46\n' +
            'Нет\n' +
            '6.82\n' +
            'Да\n' +
            'Интернет-статья «Трехмерный движок на формулах Excel для чайников»\n' +
            '11.61\n' +
            'Да\n' +
            '27.91\n' +
            'Нет\n' +
            '9.27\n' +
            'Да\n' +
            '«Капитал» Карла Маркса\n' +
            '5.84\n' +
            'Нет\n' +
            '28.94\n' +
            'Нет\n' +
            '138.22\n' +
            'Нет\n' +
            '«Идиот» Фёдора Достоевского\n' +
            '6.65\n' +
            'Да\n' +
            '45.65\n' +
            'Нет\n' +
            '53.12\n' +
            'Нет\n' +
            '«Мёртвые души» Николая Гоголя\n' +
            '7.14\n' +
            'Да\n' +
            '40.81\n' +
            'Нет\n' +
            '35.58\n' +
            'Нет\n' +
            '«Путешествие к центру Земли» Жюля Верна\n' +
            '5.03\n' +
            'Нет\n' +
            '35.19\n' +
            'Нет\n' +
            '21.56\n' +
            'Нет\n' +
            'По результатам проверки, значения всех трёх критериев статьи «Корчеватель» попали в установленные интервалы, т.е. работу можно считать соответствующей научному стилю, что показывает соответствие стиля данной статьи предъявляемым требованиям. Интернет-статьи и литературные произведения не написаны в научном стиле, и выделяются повышенным значением . Поскольку, на всех примерах альтернативных жанров критерий не показал ложных срабатываний, можно считать, что он корректно выполняет задачу определения соответствия научному стилю.\n' +
            'Выводы\n' +
            'В результате работы были сформулированы три числовых критерия проверки статьи на соответствие научному стилю, были установлены пороговые значения данных критериев, позволяющие оценивать качество статей, был сделан инструмент в виде исполняемого сценария, рассчитывающего данные критерии для статьи.\n' +
            'В дальнейшем планируется разработать веб-сервис, выполняющий проверку статей по полученным критериям, а также анализирующий форматирование статей и семантику на соответствие научному стилю [1].\n' +
            'Список использованной литературы\n' +
            '1. Демидова А. К. Пособие по русскому языку: научный стиль, оформление научной работы. – Рус. яз., 1991 – 201 c.\n' +
            '2. Davis H. Search engine optimization. – " O\'Reilly Media, Inc.", 2006 – 41 p.\n' +
            '3. Словарь терминов семантического анализа. [Электронный ресурс]. – Режим доступа: https://seopult.ru/library, свободный. Яз. рус. (дата обращения 20.12.2018).\n' +
            '4. Newman M. E. J. Power laws, Pareto distributions and Zipf\'s law //Contemporary physics. – 2005. – Т. 46. – №. 5. – С. 323-351.\n' +
            '5. Lelu A. Jean-Baptiste Estoup and the origins of Zipf\'s law: a stenographer with a scientific mind (1868-1950) //Boletín de Estadística e Investigación Operativa. – 2014. – Т. 30. – №. 1. – С. 66-77.\n' +
            '6. Dong X. L. et al. Knowledge-based trust: Estimating the trustworthiness of web sources //Proceedings of the VLDB Endowment. – 2015. – Т. 8. – №. 9. – С. 938-949.\n' +
            '7. Блеес Э.И., Андросов В.Ю. Автоматизация процесса проверки текста на соответствие научному стилю // Современные технологии в теории и практике программирования: материалы научно-практической конференции студентов, аспирантов и молодых ученых -2018. - С. 118-121;\n' +
            '8. ВЫСШАЯ АТТЕСТАЦИОННАЯ КОМИССИЯ (ВАК) при Министерстве образования и науки Российской Федерации. [Электронный ресурс]. – Режим доступа: http://vak.ed.gov.ru/, свободный. Яз. рус. (дата обращения 20.12.2018).\n' +
            '9. РОССИЙСКИЙ ИНДЕКС НАУЧНОГО ЦИТИРОВАНИЯ. [Электронный ресурс]. – Режим доступа: https://elibrary.ru/project_risc.asp, свободный. Яз. рус. (дата обращения 20.12.2018).\n' +
            '10. Исполняемый сценарий, получающий выборку статей. [Электронный ресурс]. – Режим доступа: https://github.com/EduardBlees/Master-s-thesis/blob/master/script/leninka_scrapper.py, свободный. Яз. англ. (дата обращения 20.12.2018).\n' +
            '11. Boeing G., Waddell P. New insights into rental housing markets across the United States: Web scraping and analyzing craigslist rental listings //Journal of Planning Education and Research. – 2017. – Т. 37. – №. 4. – С. 457-476.\n' +
            '12. КиберЛенинка. Научная электронная библиотека, построенная на парадигме открытой науки. [Электронный ресурс]. – Режим доступа: https://cyberleninka.ru, свободный. Яз. рус. (дата обращения 20.12.2018).\n' +
            '13. Shapiro S. S., Wilk M. B. An analysis of variance test for normality (complete samples) //Biometrika. – 1965. – Т. 52. – №. 3/4. – С. 591-611.\n' +
            '14. Kolmogorov A. Sulla determinazione empirica di una lgge di distribuzione //Inst. Ital. Attuari, Giorn. – 1933. – Т. 4. – С. 83-91.\n' +
            '15. Anderson T. W., Darling D. A. Asymptotic theory of certain" goodness of fit" criteria based on stochastic processes //The annals of mathematical statistics. – 1952. – С. 193-212.\n' +
            '16. Гмурман Б. Е. Теория вероятностей и математическая статистика. – Москва «Высшая школа», 2003. – 478 с.\n' +
            '17. Cumming G. Replication and p intervals: p values predict the future only vaguely, but confidence intervals do much better //Perspectives on Psychological Science. – 2008. – Т. 3. – №. 4. – С. 286-300.\n' +
            '18. Исполняемый сценарий, рассчитывающий математические критерии распределений. [Электронный ресурс]. – Режим доступа: https://github.com/EduardBlees/Master-s-thesis/blob/master/script/results/testDistribution.py, свободный. Яз. англ. (дата обращения 20.12.2018).\n' +
            '19. SciPy module for Python. [Электронный ресурс]. – Режим доступа: https://scipy.org, свободный. Яз. англ. (дата обращения 20.12.2018).\n' +
            '20. Wheeler D. J. et al. Understanding statistical process control. – 1992. – 406 p.\n' +
            '21. Easton V. J., McColl J. H. Statistics glossary. [Электронный ресурс]. – Режим доступа: https://stats.gla.ac.uk/steps/glossary/index.html, свободный. Яз. англ. (дата обращения 20.12.2018).\n' +
            '22. Жуков М. С. Корчеватель: алгоритм типичной унификации точек доступа и избыточности. – 2008.\n' +
            '23. Stribling J., Aguayo D., Krohn M. Rooter: A methodology for the typical unification of access points and redundancy //Journal of Irreproducible Results. – 2005. – Т. 49. – №. 3. – С. 5.\n' +
            '24. Хабр. «Моё разочарование в софте». [Электронный ресурс]. – Режим доступа: https://habr.com/post/423889/, свободный. Яз. рус. (дата обращения 20.12.2018).\n' +
            '25. Хабр. «Наши с вами персональные данные ничего не стоят». [Электронный ресурс]. – Режим доступа: https://habr.com/post/423947/, свободный. Яз. рус. (дата обращения 20.12.2018).\n' +
            '26. Хабр. «Рассказ о том, как я ворую номера кредиток и пароли у посетителей ваших сайтов». [Электронный ресурс]. – Режим доступа: https:// habr.com/post/346442/, свободный. Яз. рус. (дата обращения 20.12.2018).\n' +
            '27. Хабр. «Трехмерный движок на формулах Excel для чайников». [Электронный ресурс]. – Режим доступа: https://habr.com/post/ 353422/, свободный. Яз. рус. (дата обращения 20.12.2018).\n' +
            '28. IT-сообщество Хабр. [Электронный ресурс]. – Режим доступа: https://habr.com, свободный. Яз. рус. (дата обращения 20.12.2018).')
    })
    $('#sample2').click( function() {
        textarea.html('Формализация требования для разработки ПО, решающего задачу автоматизации управления аналитикой трудозатрат сотрудников в современных системах управления проектами путем сравнительного анализа существующих подходов\n' +
            'Ключевые слова: управление ресурсами, менеджер задач, система управления проектами, трудозатраты, аналитика трудозатрат\n' +
            '\n' +
            'Аннотация\n' +
            'В данной работе были рассмотрены различные инструменты, позволяющие обеспечить автоматизацию аналитики трудозатрат, и проведен сравнительный анализ систем управления проектами на наличие данных инструментов. По результатам анализа были выявлены недостатки выбранных систем, заключающиеся в отсутствии необходимых для проведения аналитики функций, которые были учтены при формировании требований для реализации предлагаемого веб-сервиса.\n' +
            '\n' +
            'Введение\n' +
            'Управление ресурсами – одна их важнейших управленческих задач на предприятии любой отрасли. Эти ресурсы можно распределить на две основные группы: материальные и трудовые. Материальные ресурсы, такие как сырье, запасы, оборудование и другие, расходуются путем списания их количества или части стоимости на производство. Такие ресурсы измеримы, контролируемы и управляемы.\n' +
            '\n' +
            'Трудовые ресурсы, в свою очередь, представляют собой сотрудников предприятия, выполняющих определенную работу. Эти ресурсы, в отличии от материальных, расходуют рабочее время на выполнение работы. А измерение и контроль расходов рабочего времени – более сложная задача.\n' +
            '\n' +
            'Для современных IT-компаний, занимающихся разработкой программных продуктов, трудовые ресурсы являются основными, поэтому важно уметь ими правильно распоряжаться.\n' +
            '\n' +
            'В настоящее время большинство IT-компаний используют менеджеры задач для обеспечения управления процессами разработки и сопровождения своих продуктов. Данные программные системы, как правило, содержат разные инструменты для настройки потока задач и соответствующих бизнес-процессов, однако возможности по отслеживанию рабочей нагрузки сотрудников часто не реализованы на необходимом уровне. Ошибки в планировании распределения задач приводит к выгоранию сотрудников и несвоевременному выполнению обязательств компании, что может стать причиной финансовых потерь. Таким образом, важно использовать программное обеспечение, корректно оценивающие трудозатраты сотрудников и помогающее верно распределить ресурсы компании.\n' +
            '\n' +
            'Для решения проблемы обеспечения автоматизации аналитики трудозатрат сотрудников с использованием современных систем управления проектами требуется рассмотреть существующие программные решения и формализовать требования для разработки соответствующего ПО. Объектом данного исследования являются системы управления проектами. Предмет исследования - функциональность систем управления проектами по автоматизации аналитики трудозатрат сотрудников.\n' +
            '\n' +
            'Обзор предметной области\n' +
            'Для проведения сравнительного анализа были выбраны часто используемые в индустрии [1] системы управления проектами:\n' +
            '\n' +
            'Atlassian Jira\n' +
            'JIRA [2] – коммерческая система отслеживания ошибок и управления проектами с закрытым исходным кодом, разрабатываемая компанией Atlassian. Разработана преимущественно на языке программирования Java и поддерживает интеграции со сторонними сервисами с помощью REST API или системных расширений. Распространяется как для самостоятельной установки пользователем, так и как SaaS (Software as a Service)\n' +
            '\n' +
            'Easy Redmine\n' +
            'Easy Redmine [3] – коммерческая версия системы управления проектами с открытым исходным кодом Redmine с дополненными функциональными возможностями, разрабатываемая одноименной компанией. Easy Redmine является программным обеспечением с закрытым исходным кодом. Данный программный продукт создан при помощи языки программирования Ruby и веб-фреймворка Ruby on Rails, а также поддерживает сторонние интеграции с помощью REST API. Распространяется как для самостоятельной установки пользователем, так и как SaaS (Software as a Service)\n' +
            '\n' +
            'Trello\n' +
            'Trello [4] – коммерческая система управления проектами с закрытым исходным кодом, разрабатываемая компанией Atlassian. В данной системе используется язык программирования JavaScript и веб-фреймворк React, а распространение происходит только по модели SaaS (Software as a Service). Поддерживаются сторонние решения и возможность работы с данными средствами REST API\n' +
            '\n' +
            'JetBrains YouTrack\n' +
            'YouTrack [5] – коммерческая система отслеживания ошибок и управления проектами, разрабатываемая компанией JetBrains. Разработка системы ведется на языке программирования Java и поддерживает интеграции со сторонними сервисами с помощью REST API. Распространяется как для самостоятельной установки пользователем, так и как SaaS (Software as a Service)\n' +
            '\n' +
            'Azure Boards\n' +
            'Azure Boards [6] является частью системы Azure DevOps Server (ранее Microsoft Team Foundation Server) – продукта компании Microsoft, представляющую собой комплексное решение для совместной работы над проектами по разработке программного обеспечения. Присутствует поддержка ряда системных расширений, однако добавление сторонний интеграций не предусмотрено\n' +
            '\n' +
            'Asana\n' +
            'Asana [7] – коммерческая система управления проектами, разрабатываемая компанией Asana. Система имеет закрытый исходный код, однако предоставляет API для разработчиков. Разработка ведется с использованием обширного набора технологий, среди которых TypeScript, React и другие\n' +
            '\n' +
            'Для сравнения вышеуказанных систем были выбраны следующие функциональные возможности систем управления проектами:\n' +
            '\n' +
            'Цена использования за одного пользователя\n' +
            'При выборе сервиса необходимо учитывать стоимость его использования компанией, чтобы планировать использование бюджета. Общая стоимость рассчитывается на основе цены за одного сотрудника, умноженного на число пользователей системы\n' +
            '\n' +
            'Установка оценочных и фактических трудозатрат по задаче\n' +
            'Аналитика трудозатрат производится на основе данных по использованию сотрудниками трудовых ресурсов компании, поэтому важно иметь возможность установить первоначальную оценку и фактические трудозатраты сотрудника по задаче для последующей аналитики\n' +
            '\n' +
            'Просмотр таблицы нормирования труда (разницы оценочного и фактического времени выполнения задач за период)\n' +
            'Таблица нормирования труда позволяет определить сотрудников, превысивших оценочные трудозатраты по задачам для последующего выяснения причин отклонений и их устранения. Кроме того, эти данные позволяют рассчитать реальную трудоемкость различных операций\n' +
            '\n' +
            'Просмотр статистики “сгорания” времени выполнения проекта ("Burndown chart")\n' +
            'Диаграмма сгорания задач (Burndown Chart) используется в гибких методологиях разработки, таких как Agile и Scrum, и позволяет оценить степень выполнения задач командой по отношению к прошедшему времени, количество закрытых и нерешенных задач за единицу времени\n' +
            '\n' +
            'Таблица 1. Сравнение аналогов\n' +
            '\n' +
            'Система управления проектами\tJira\tEasy Redmine\tTrello\tYouTrack\tAzure Boards\tAsana\n' +
            'Цена использования за одного пользователя\t7$\t3$\t9$\t1$\t6$\t11$\n' +
            'Установка оценочных и фактических трудозатрат по задаче\tДа\tДа\tНет*\tДа\tДа\tНет*\n' +
            'Просмотр таблицы нормирования труда\tНет*\tДа\tНет\tНет*\tНет\tНет\n' +
            'Просмотр статистики “сгорания” времени выполнения проекта\tДа\tНет*\tНет\tДа\tДа\tНет\n' +
            '* Да, при использовании сторонних расширений\n' +
            '\n' +
            'По итогам проведенного сравнительного анализа можно сделать вывод о том, что рассмотренные системы не полностью реализуют указанные в критериях сравнения функциональные возможности, необходимые для проведения аналитики трудозатрат сотрудников. Кроме того, стоимость использования сервисов не всегда оправдана, т.к. прямой зависимости между ценой использования за одного пользователя и количеством функций не наблюдается\n' +
            '\n' +
            'Выбор метода решения\n' +
            'Для решения задачи автоматизации управления аналитикой трудозатрат сотрудников предлагается реализовать веб-портал, имеющий интеграции с вышеуказанными системами управления проектами и реализующий следующие функции:\n' +
            '\n' +
            'Установка оценочных и фактических трудозатрат по задаче\n' +
            'Просмотр таблицы нормирования труда\n' +
            'Просмотр статистики “сгорания” времени выполнения проекта\n' +
            'Кроме того, разрабатываемый продукт должен распространяться по модели Open Source, тем самым обеспечив минимальную стоимость использования за одного сотрудника\n' +
            '\n' +
            'Описание метода решения\n' +
            'Реализовать вышеуказанные функции предлагается с использованием следующих технологий:\n' +
            '\n' +
            'Для хранения данных в системе (таких как данные о трудозатратах, информация о пользователях и другое) и управления ими предлагается использовать СУБД MongoDB версии не ниже 4.2 и обеспечить интеграцию с серверной частью приложения, реализованного с помощью JavaScript-фреймворка Express версии не ниже 4.17.1 и программной платформы NodeJS версии не ниже 13.0.0, с помощью Mongoose ODM версии не ниже 5.7.0.\n' +
            '\n' +
            'Для упрощения процесса построения требуемых таблиц, а также для отображения и редактирования в них соответствующих данных предлагается использовать библиотеку Plotly Pivottable, позволяющая создавать сводные таблицы для отображения большого количества информации. Данная библиотека разработана для Javascript-фреймворка React версии не ниже 16.0, который предлагается использовать для построения клиентской части приложения. Данная библиотека позволит реализовать критерии "Установка оценочных и фактических трудозатрат по задаче" и "Просмотр таблицы нормирования труда" и обеспечить наличие соответствующих таблиц.\n' +
            '\n' +
            'Для построения различных графиков в системе (таких как график “сгорания” времени выполнения проекта) предлагается использовать Javascript-библиотеку Chart.JS версии не ниже 2.9.0., позволяющая строить гистограммы и линейные графики. Данная библиотека позволит реализовать критерий "Посмотр статистики "сгорания" времени выполнения проекта" и обеспечить наличие соответствующего графика.\n' +
            '\n' +
            'Для обмена данными между клиентской и серверной частью приложения предлагается использовать стандарт GraphQL, реализованный в библиотеках Apollo Client (версии не ниже 3.1.0) и Apollo Server (версии не ниже 2.8.1) для соответствующих частей приложения. Использование технологии GraphQL вместо REST позволит сэкономить время на реализацию API серверного приложения и облегчить настройку взаимодействия между подсистемами. Кроме того, использование MongoDB в качестве базы данных позволит упростить интеграцию GraphQL, так как оба стандарта рассчитаны на работу с иерархическими структурами данных (документные хранилища)\n' +
            '\n' +
            'Таким образом, вышеуказанный набор технологий позволит реализовать поставленную задачу за счет реализации необходимых критериев. Кроме того, выбор JavaScript в качестве языка разработки как для клиентской, так и для серверной части приложения, позволит упростить процесс разработки за счет использования общей кодовой базы. А использование контейнеризации с помощью Docker позволит упростить распространение приложения в Open Source сообществе, тем самым повышая его конкурентоспособность\n' +
            '\n' +
            'Заключение\n' +
            'По результатам проведенного сравнительного анализа были определены слабые места в функциональности ряда менеджеров задач по автоматизации аналитики управления трудозатратами. Акцентируя внимание на необходимости правильного управления трудовыми ресурсами, был выдвинут ряд критериев, сформировав тем самым требования для разработки веб-сервиса. Кроме того, был предложен набор технологий для разработки веб-сервиса, решающего поставленную задачу. Данный набор был собран таким образом, что его использование обеспечивает гибкость и масштабируемость разрабатываемого программного продукта.\n' +
            '\n' +
            'В будущем планируется реализация веб-сервиса и его апробация на реальных проектах.\n' +
            '\n' +
            'Список литературы\n' +
            'Alla Kravets. "Web Portal for Project Management in Electronics Design Software Development" 2019 International Seminar on Electron Devices Design and Production (SED). IEEE, 2019.\n' +
            'Jira Software Features. Доступно на: https://www.atlassian.com/software/jira/features (посещено 29 ноября 2019)\n' +
            'Easy Redmine 2019 Features. Доступно на: https://www.easyredmine.com/software/easy-redmine (посещено 29 ноября 2019)\n' +
            'Trello Features (Trello Board). Доступно на: https://trello.com/b/zo2N0vE6/trello-features (посещено 29 ноября 2019)\n' +
            'Features. YouTrack - JetBrains. Доступно на: https://www.jetbrains.com/youtrack/features/ (посещено 29 ноября 2019)\n' +
            'Azure Boards documentation. Доступно на: https://docs.microsoft.com/en-us/azure/devops/boards/?view=azure-devops (посещено 29 ноября 2019)\n' +
            'Full list of Asana\'s features. Доступно на: https://asana.com/guide/get-started/share/features (посещено 29 ноября 2019)')
    })
    $('#sample3').click( function() {
        textarea.html('Обзор программного обеспечения для эквайринговых решений банковской процессинговой системы, отвечающих за взаимодействие между POS терминалами и сервером\n' +
            'Ключевые слова: банковского эквайринга, процессинг, электронные платежи, пластиковым картам, POS терминал.\n' +
            '\n' +
            'Аннотация\n' +
            'Статья включает в себя результаты исследования существующих решений в сфере банковского эквайринга, а также выбор метода решения для проектирования аналогичной системы. Данные о существующих аналогах получены путем изучения открытой информации на сайтах производителей. В итоге, получена некая сравнительная характеристика существующих систем и выбран метод решения для построения аналогичной системы. Данная статья является основой для последующей разработки программного обеспечения.\n' +
            '\n' +
            'Введение\n' +
            'Сегодня, с увеличивающимися объемами электронных платежей в торговле, совершающихся по банковским пластиковым картам, требуется соответствующее качественное ПО, обеспечивающее взаимодействие между POS терминалами, установленными в торговой точке, и процессинговым центром банка. Такое программное обеспечение (далее - ПО) помимо такого качества как отказоустойчивость должно надежно защищать данные при передаче по сети, чтобы сберечь денежные средства клиентов от похищения злоумышленниками. Все больше и больше покупателей предпочитают безналичную оплату по банковской карте или смартфоном с NFC чипом в различных торговых точках. По статистике ЦБ РФ, по итогам 2016 года объем эмиссии карт российских банков вырос на 4,5% в сравнении с 2015 годом. Количество действующих пластиковых карт, выпущенных российскими кредитными организациями, приблизилось к 255 млн. штук. В совокупном объеме торговли доля оплаты картами товаров и услуг увеличилась с 3,5% в 2009 году до 30,5% в 2016 году. Помимо всего вышеперечисленного у оплаты по банковской карте существует еще одно немаловажное достоинство. Если клиент использует безналичную оплату, то его сбережения хранятся в банке, где эти денежные средства вовлечены в оборот, тем самым развивая экономику страны. Таким образом вышеперечисленные факты делают задачу обеспечения возможности совершать платежи по пластиковым картам весьма актуальной и полезной обществу.\n' +
            '\n' +
            'Целью данной статьи является исследования существующих решений в сфере банковского эквайринга, а также выбор метода решения для проектирования аналогичной системы.\n' +
            '\n' +
            'Задачи:\n' +
            '\n' +
            'Рассмотреть актуальные решения в сфере аналогичного ПО, обеспечивающего возможность принимать к оплате платежные карты (банковского эквайринга).\n' +
            'Сделать выводы о существующих аналогов.\n' +
            'Предложить модульную концепцию архитектуры приложения.\n' +
            'Объектом исследования является ПО для обеспечения взаимодействия процессингового центра и POS терминалов по стандарту ISO 8583 [1]. Предметом исследования является процесс взаимодействия между процессинговым центром и POS терминалами по стандарту ISO 8583: формирование финансовых сообщений, принципы их передачи и обработки в процессинговом центре.\n' +
            '\n' +
            'Принцип отбора аналогов\n' +
            'Все представленные к сравнению системы являются программным обеспечением, которое предназначено для установки в процессинговые центры банков и решает задачи по обеспечению коммуникации и взаимодействия между POS терминалом и хостом (процессинговым центром). Аналоги отбирались по идентичной функциональности в предметной области. Но каждая система отличается от другой помимо архитектурного дизайна ПО и языков программирования, на которых данное ПО написано, еще протоколами взаимодействия.\n' +
            '\n' +
            'ACI ACQUIRER[2]\n' +
            'ACI ACQUIRER – продукт компании ACI Worldwide для поддержки банковского эквайринга. ACI Acquirer хранит и управляет торговыми счетами и их историями и поддерживает полный жизненный цикл обработки бэк-офиса, включая настройку условий и положений торгового соглашения, открытие счетов, управление учетными записями, управление транзакциями, торговое обслуживание, выставление счетов и расчеты. Продукт ACI ACQUIRER широко распространен в Северной Америке и Европе. Помимо основных функций ACI ACQUIRER включает в себя улучшенную функциональность для формирования налоговых расчетов и отчетности по законодательству США.\n' +
            '\n' +
            'Card Suite Acquiring[4]\n' +
            'Card Suite Acquiring – продукт компании Tieto, предлагающий гибкое и надежное решение для управления данными о торговых предприятиях и расчетов с ними, а также осуществления авторизации и клиринга. Продукт включает в себя несколько модулей, для комплексного решения по обслуживанию эквайрингового бизнеса. Модули позволяют управлять данными о торговых предприятиях, контролировать жизненный цикл POS терминала, а также производить авторизации эквайеров.\n' +
            '\n' +
            'WAY4 Merchant[3][5]\n' +
            'WAY4 Merchant – продукт компании OpenWay Group, является многосоставной системой для осуществления банковской эквайринга. Запуск, преобразование и оптимизация различных бизнес-моделей торгового эквайринга на одной технологической платформе - от традиционного POS-эквайринга и электронной коммерции до смарт-POS, торговых кошельков, невидимых платежей, платежей в приложениях и социальных сетях.\n' +
            '\n' +
            'Критерии сравнения аналогов\n' +
            'Протокол – сложность протокола, по которому происходит взаимодействие между терминалом и хостом, а также его расширяемость. От сложности протокола зависит и сложность разработки и последующего сопровождения всей системы. Чем проще и легковеснее будет протокол, тем проще будет разработать и сопровождать систему. Так же протокол должен быть хорошо масштабируемым, то есть добавление измений в протокол по поддержки новых технологий, не приводило в неработоспособное состояние уже функционирующую систему.\n' +
            'Гибкость системы – из скольких компонентов состоит продукт. Продук не должен быть гигантской монолитной системой, которая помимо выполнения необходимых функций поставляется в комплекте с кучей лишней функциональности, которая ненужна клиенту в решении его проблемы. Также в монолитный продукт труднее добавлять новую функциональность.\n' +
            'Поддержка мультивалютных платежей – важно, потому что чем больше поддерживается валют платежей, тем шире география применимости системы.\n' +
            'Продукт\tПротокол\tГибкость системы\tПоддержка мультивалютных платежей\n' +
            'ACI ACQUIRER\tSPDH – собственная разработка компании, не реализует стандарт ISO 8583. Отсюда возникает закрытость стандарта, следовательно невозможно использовать данный протокол при интеграции с другими системами.\tПоставляется в комплекте с модулями, от которых зависит данное приложение, то есть по своей сути является монолитной системой\tПоддерживается множество валют.\n' +
            'Card Suite Acquiring\tИспользует собственную реализацию протокола, основанную на стандарте ISO 8583, что добавляет системе гибкости при интеграции с другими системами и упрощает его поддержку\tПоставляется в комплекте с другими модулями, принося с собой лишнюю функциональность, усиливая связанность между модулями.\tПоддерживается множество валют.\n' +
            'WAY4 Merchant\tИспользует собственную реализацию протокола, основанную на стандарте ISO 8583, что добавляет системе гибкости при интеграции с другими системами и упрощает его поддержку\tПредставляет собой целую систему решающую целый комплекс задач, касающихся банковского эквайринга и обслуживанию продавцов, что лишает систему легкости и гибкости в случае необходимости использования только части функционала\tПоддерживается множество валют.\n' +
            'Выводы по итогам сравнения\n' +
            'В результате сравнения было выявлено, что существующие системы являются комплексными решениями и охватывают большую область решаемых задач и являются единым целым. Рассмотренные системы лишены гибкости разбираться на меньшие функциональные модули, каждый из которых решает только одно конкретную задачу. Это приводит к негативным последствиям в том случае, если пользователь не желает использовать весь предоставляемый функционал данными системами. К тому же рассмотренные системы имеют архитектуру, заложенную еще в 80-90-х годах прошлого столетия, тем самым неся собой тяжелую ношу в виде постоянной поддержки обратной совместимости и устаревших технологий, с тех же времен растут корни и комплексных решений, когда считалось, что поставляемое ПО должно быть «монолитной системой» и решать абсолютно все задачи. Продукт ACI ACQUIRER реализует собственный протокол SPDH, что создает «стену» при попытке интеграции системы с продуктами других производителей.\n' +
            '\n' +
            '2. Выбор метода решения\n' +
            '2.1 Требования к решению:\n' +
            'Работать на JVM версии не ниже 1.8.\n' +
            'Работать с СУБД Oracle и PostgreSQL.\n' +
            'Решение должно быть реализовано c использованием технологии Spring Boot.\n' +
            'Принимать к оплате карты основных платежных систем: MasterCard, VISA, UnionPay, Maestro, МИР.\n' +
            'Принимать к оплате карты выпущенные не только банком эквайером, но и сторонним банком.\n' +
            'Решение должно быть легко интегрируем в существующее программное окружение компании.\n' +
            '2.2 Описание метода решения\n' +
            'Исходя из изученных существующих аналогов, было принято решение найти свой собственный подход к решению поставленной задачи. Метод решения состоит из следующих задач:\n' +
            '\n' +
            'Необходимо разработать собственный протокол, основанный на стандарте ISO8583. Именно по этому протоколу и будет осуществляться взаимодействие между POS терминалом и сервером процессиногового центра. Также по протоколу предполагается передача данных всех финансовых транзакций, прошедших в торговой точки через POS терминал. Помимо данных о финансовых транзакций протокол будет поддерживть передачу административных сообщений, например, о смене ключей шифрования, о настройке сети и т.д.\n' +
            'Также необходиом разработать архитектуру приложения. Было решено, что архитектура должна быть модульной, чтобы облегчить поддержку и увеличить масштабируемость системы. Итак, архитекута приложния должна состоять из трех модулей:\n' +
            'Модуль управления терминалами - отвечает за первичную обработку сообщения от терминала. Модуль ответственен за учет всех видов терминалов (POS-терминалы, банкоматы, киоски, импринтеры), учет логических устройств, первичный прием операции с устройства и обогащения её дополнительными данными.\n' +
            'Модуль обработки транзакции, полученной от терминала. Модуль является расширением модуля управления терминалами в части поддержки операций специфичных для POS-терминалов.\n' +
            'Модуль упраления безопасностью. Модуль предназначен для формирования, хранения и обработки ключей безопасности, также отчечает за взаимодействие с HSM. HSM (Hardware Security Module) - это физическое вычислительное устройство, которое позволяет формировать, хранить и управлять цифровыми ключами, а также производить различные криптографические операции.\n' +
            'Заключение\n' +
            'В данной статье были рассмотрены системы, решающие задачи связанные с обеспечением функциональности банковского эквайринга, а также произведено их сравнение, разработан метод решения, который позволит реализовать собственную программную систему для банковского эквайринга. Дальнейшее развитие исследования будет заключаться в построении первого прототипа приложения с последующей реализацией всей системы.\n' +
            '\n' +
            'Список источников\n' +
            'Стандарт ISO8583 [Электронный ресурс]. – Режим доступа: https://ru.wikipedia.org/wiki/ISO_8583 (дата обращения: 10.10.2018)\n' +
            'ACI ACQUIRERI [Электронный ресурс]. – Режим доступа: https://www.aciworldwide.com/products/acquirer (дата обращения: 10.10.2018)\n' +
            'WAY4 Merchant [Электронный ресурс]. – Режим доступа: https://www.openwaygroup.com/way4-merchant-acquiring-system (дата обращения: 10.10.2018)\n' +
            'Card Suite Acquiring [Электронный ресурс]. – Режим доступа: https://www.tieto.ru/industries/financial-services-card-suite/acquiring (дата обращения: 10.10.2018)\n' +
            'TAdviser [Электронный ресурс]. – Режим доступа: http://www.tadviser.ru/index.php/%D0%9A%D0%BE%D0%BC%D0%BF%D0%B0%D0%BD%D0%B8%D1%8F:OpenWay_Service (дата обращения: 10.10.2018)')
    })
    $('#sample4').click( function() {
        textarea.html('Методы поиска плагиата в кодах программ\n' +
            'Ключевые слова: плагиат, метрики для обнаружения плагиата, токен.\n' +
            '\n' +
            'Аннотация\n' +
            '\n' +
            'Изучены такие виды представления кодов программ, как текст без преобразований, n - граммы и токены. На языке программирования Python реализовано разбиение текстов программ из массива решений студентов на токены. Сформулированы требования к алгоритмам обнаружения плагиата. Проведен обзор аналогов метрик для обнаружения плагиата в текстах программ. После сравнения метрик: численных значений атрибутов, наибольшей общей подпоследовательности, расстояния Жаккара, расстояния Левенштейна и расстояния Колмогорова, между собой для реализации выбран расчет расстояния Левенштейна. Полученные результаты показывают, насколько тексты программ похожи между собой.\n' +
            '\n' +
            'Введение\n' +
            '\n' +
            'Цифровой контент все чаще подвергается копированию. Люди цитируют друг друга, а также соавторство порождает увеличение копий работ. Соответственно возникает необходимость установления авторских прав на интеллектуальный труд, а также проверка новых работ на плагиат.\n' +
            '\n' +
            'Под плагиатом понимается: "Умышленное присвоение авторства чужого произведения или использование в своих трудах чужого произведения без ссылки на автора"[1].\n' +
            '\n' +
            'В учебной деятельности проблема обнаружения плагиата является очень актуальной, потому что многие студенты копируют решения у одноклассников или берут из интернета. В иностранных вузах контроль за списыванием студентов ведется постоянно.\n' +
            '\n' +
            'Целью является реализация программного модуля, осуществляющего поиск плагиата в кодах программ. Объектом исследования является методы обнаружения плагиата, а предметом расстояние между текстами программ.\n' +
            '\n' +
            'Поставлены следующие задачи:\n' +
            '\n' +
            'Выделить способы представления данных для поиска плагиата в кодах программ.\n' +
            '\n' +
            'Сформулировать требования к алгоритмам обнаружения плагиата.\n' +
            '\n' +
            'Исследовать существующие методы поиска плагиата.\n' +
            '\n' +
            'Выделить достоинства и недостатки существующих методов.\n' +
            '\n' +
            'Реализовать алгоритм обнаружения плагиата в кодах программ, написанных на языке Octave.\n' +
            '\n' +
            'Системы обнаружения плагиата также применяются в таких задачах, как указание точных источников заимствования информации, повышение точности поисковой выдачи, кластеризация кода по выбранным параметрам.\n' +
            '\n' +
            'Нетривиальным является найти такое решение, которое гарантированно найдет копирование чужого кода, включая небольшие участки в большом объеме данных. Необходимо также, чтобы код программы, в которым заменены имена переменных или их порядок, обнаруживался как скопированный при наличии совпадений. Высокие требования безусловно усложняют задачу. Поэтому возникает необходимость изучить существующие методы обнаружения плагиата и проанализировать их, выделив преимущества и недостатки. А создание удобного программного инструмента для обнаружения плагиата представляет собой актуальную задачу.\n' +
            '\n' +
            'Для выявления плагиата основным методом является расчет расстояния между текстами. Имеющие на рынке решения не позволяют работать с большим количеством коротких программ, не предоставляют пользователям удобного интерфеса и, зачастую, их функционал сильно ограничен.\n' +
            '\n' +
            'Обзор алгоритмов обнаружения плагиата в кодах программ\n' +
            '\n' +
            '1. Виды представления исходных кодов программ\n' +
            '\n' +
            'Входными данными модуля проверки на плагиат является текст программы. Для анализа на плагиат могут быть использованы исходный, объектный или исполняемый код программ. Был выбран исходный код, так как в нем содержится больше информации, характеризующей стилистические особенности конкретного автора. Первым шагом для реализации модуля обнаружения плагиата является выбор способа представления данных в кодах программ.\n' +
            '\n' +
            '1.1. Исходный текст без преобразований\n' +
            '\n' +
            'Можно рассматривать исходный код без преобразований. Такой метод представления данных крайне неэффективен, так как при анализе численных выражений признаков программы у разных программ могут быть получены близкие значения.\n' +
            '\n' +
            '1.2. Элементы n-мерного пространства: N-граммы\n' +
            '\n' +
            'N-грамма — это непрерывная подстрока из n элементов. Тексты программ разбиваются на N-граммы, и составляются списки слов, содержащие эти подстроки. Далее последовательно перебираются и сравниваются списки слов, которые содержат конкретные n-граммы. Если два слова совпадают с погрешностью, то вероятно для них найдется хотя бы одна общая n-грамма. Чтобы определить насколько похожи слова в двух программ, следует задать метрику.\n' +
            '\n' +
            'Параметр разбиения n выбирается пользователем. Выбор большого значения N ведет к тому, что слова длины меньшей, чем n могут быть не найдены.\n' +
            '\n' +
            'Например, есть текст: «function [X, Y] = task3(A, B)». После разделения на подстроки длины 4: «func», «unct», «ncti», «ctio», «tion» и так далее.\n' +
            '\n' +
            'Можно улушить алгоритм хешированием по сигнатуре[2]. В качетве хеша используется группа символов из алфавита. Бит 1 на позиции i в хеше означает, что в исходном слове присутствует n-грамма из i-ой группы алфавита. Такие хеши вычисляются для каждой программы. Далее в списки группируются слова, которые имеют одинаковое значение хеша. Составляется таблица соответствия хеша и списка слов. Алгоритм находит сначала списки слов, которые могут удовлетворять запросу, а потом ищет сами слова. Похожие слова будут располагаться в смежных ячейках, что позволяет осуществлять поиск эффективнее, без многократного чтения из разных позиций.\n' +
            '\n' +
            'Значение хеша не чувствительно к порядку символов или удалению или вставки одного символа. При этом хеширование по сигнатуре очень чувствительно к выбору параметров и хеш-функции.\n' +
            '\n' +
            '1.3. Список токенов\n' +
            '\n' +
            'Токенизация — это процесс преобразования текста в последовательность строк (лексических единиц) с определенным значением (токенов) [3].\n' +
            '\n' +
            'Токены состоят из имени токена и его значения, которое не обязательно может присутствовать. Имя токена представляет собой категорию лексической единицы. Выделяют следующие общие имена (таблица 1):\n' +
            '\n' +
            'Таблица 1. Имена токенов\n' +
            '\n' +
            'Имя токена\tОписание\tПримеры\n' +
            'Идентификаторы\tИмена переменных или функий, которые задает программист\tx, tokenizer, digit\n' +
            'Ключевые слова\tИмена индентификаторов, которые имеют специальное значение для компиляторов на языке программирования (не могут совпадать с именами переменных)\tfunction, if, for\n' +
            'Разделители\tЗнаки пунктуации и парные разделители\t{, (, ;\n' +
            'Операторы\tНабор команд\t+, =, <\n' +
            'Литералы\tФиксированные значения некоторого типа данных\tTrue, 1, «String»\n' +
            'Комментарии\tСтрока или блок, содержащие пояснения к коду\t# решаем систему уравнений A*X = B\n' +
            'Токенизация позволяет сохранять существенные и игнорировать легко модифицируемые детали кода программы.\n' +
            '\n' +
            '2. Требования к алгоритму\n' +
            '\n' +
            'При сравнении алгоритмов выдвигаются критерии:\n' +
            '\n' +
            'Сложность(оценка времени) алгоритмов поиска плагиата.\n' +
            'Оценка памяти алгоритма.\n' +
            'С какой вероятностью конкретная пара похожих программ будет найдена алгоритмом.\n' +
            'С какой вероятностью пара программ, определенная алгоритмом как похожие, действительно является похожей.\n' +
            'Первые два критерия показывают затраты на реализацию алгоритма. А вторые два связаны непосредственно с обнаружением плагиата в текстах программ, и показывают вероятности найти правильные решения.\n' +
            '\n' +
            'Для того, чтобы определить насколько программы похожи между собой требуется ввести метрику.\n' +
            '\n' +
            '3. Обзор аналогов: метрики для обнаружения плагиата в текстах программ\n' +
            '\n' +
            '3.1. Численное значение атрибутов\n' +
            '\n' +
            'Сравнение численных выражений признаков, иначе говоря атрибутов программы, относится к атрибутным методам поиска плагиата. Программы будут считаться похожими, если полученные численные выражения атрибутов близки. Например, количество операторов или операндов в программе, их количество относительно длины программы. Оценка схожести сводится к сравнению численных значений или их векторов, получаемых с помощью анализа исходного текста программ.\n' +
            '\n' +
            'Можно комбинировать несколько признаков, так чтобы программа была представлена не одним значением, а вектором. Две программы будут считаться похожими, если соответствующие значения из составленных из них векторов равны или близки. Можно уточнить метод, проведя частотный анализ количества операторов в тексте или анализ их последовательности.\n' +
            '\n' +
            'При высокой вероятности найти похожие программы вероятность того, что найденное решение действительно будет похожим, достаточно низкая.\n' +
            '\n' +
            'Преимущества:\n' +
            '\n' +
            'Простота реализации.\n' +
            '\n' +
            'Подходит для разных языков программирования.\n' +
            '\n' +
            'Недостатки:\n' +
            '\n' +
            'Несвязанные между собой характеристики исходного кода плохо описывают его в целом.\n' +
            '\n' +
            'Разные программы могут получать близкие характеристики.\n' +
            '\n' +
            'Квадратичная зависимость времени от длины исходного кода программы.\n' +
            '\n' +
            '3.2. Наибольшая общая подпоследовательность\n' +
            '\n' +
            'Задача сводится к тому, чтобы найти все такие наибольшие последовательности, которые являются подпоследовательностями нескольких последовательностей из разных текстов программ.\n' +
            '\n' +
            'Подпоследовательность получается из некоторой конечной последовательности, если удалить из нее некоторое множество ее элементов, в том числе и пустой. Например, ftion является подпоследовательностью последовательности function. Считается, что последовательность является общей подпоследовательностью двух последовательностей, если она является подпоследовательностью обеих последовательностей. Требуется для двух последовательностей найти все общие подпоследовательности наибольшей длины.\n' +
            '\n' +
            'Большинство алгоритмов нахождения наибольшей общей подпоследовательности используют подход динамического программирования и работают за квадратичное время при линейной памяти [4] [5].\n' +
            '\n' +
            'Вероятность найти похожие программы очень высокая. Но при этом достаточно высока вероятность того, что найденные решения не будут похожими из-за того, что подпоследовательностями могут являться короткие или часто встречающие слова.\n' +
            '\n' +
            'Преимущества:\n' +
            '\n' +
            'Простота реализации.\n' +
            '\n' +
            'Подходит для разных языков программирования.\n' +
            '\n' +
            'Нечувствительность к изменению текстов.\n' +
            '\n' +
            'Недостатки:\n' +
            '\n' +
            'Для одних и тех же слов наибольшие общие подпоследовательности могут быть не единственны.\n' +
            '3.3. Расстояние Жаккара\n' +
            '\n' +
            'Коэффициент (индекс) сходства Жакарра сравнивает элементы из двух текстов и определяет, какие из них являются общими, а какие — различными. Для улучшения метода обычно текст исходного кода программ представляют в виде n — грамм. Коэффициент Жаккара равен количеству общих элементов, деленному на количество всех элементов в обоих текстах. Или иначе говоря, пересечение двух текстов деленное на их объединение. Мера показывает, насколько похожи два текста и принимает значения от 0 до 1.\n' +
            '\n' +
            'Расстояние Жакарра показывает, насколько различны два текста. Оно является дополнением к коэффициенту Жаккара и может быть найден вычитанием коэффициента Жаккара из 1.\n' +
            '\n' +
            'Метод работает за квадратичное время при линейной памяти. Вероятность найти похожие программы и вероятность того, что они будут действительно похожи, высокие.\n' +
            '\n' +
            'Преимущества:\n' +
            '\n' +
            'Легко интерпретировать.\n' +
            'Недостатки:\n' +
            '\n' +
            'При малых наборах данных может дать неверный результат.\n' +
            '\n' +
            'Возможны совпадения при токенизированном представлении программ, но их отсутствие в исходных кодах программ.\n' +
            '\n' +
            'Из-за небольшого количества уникальных k-граммов в больших программах, многие совпадения, не содержащие в себе таких k-граммов не будут добавлены в решение.\n' +
            '\n' +
            'Вставка или изменение найденного блока может привести к игнорированию той части блока, в которой не содержится уникальный k-грамм.\n' +
            '\n' +
            '3.4. Расстояние Левенштейна\n' +
            '\n' +
            'Для того, чтобы найти функцию расстояния между двумя словами, метрику, наиболее часто применяют расстояние Левенштейна. Расстояние Левенштейна является дистанцией редактирования, то есть минимальным количеством операций вставки, удаления или замены одного символа на другой, необходимых для превращения одной строки в другую.\n' +
            '\n' +
            'Сначала текст программ разбивается на токены. Далее составляется матрица, которая заполняется расстояниями между каждыми токенами.\n' +
            '\n' +
            'Алгоритм имеет временную сложность O(mn) и потребляет O(mn) памяти, где m и n — длины сравниваемых строк. Можно также оптимизировать алгоритм отсечением Укконена, и свести временную сложность к O (n + d ^ 2), где n - длина более длинной строки, d - расстояние редактирования, а память к O(min(m, n)), где m и n — длины сравниваемых строк.\n' +
            '\n' +
            'Вероятность найти похожие программы очень высокая, а найденные решения с высокой вероятностью действительно будут похожими.\n' +
            '\n' +
            'Преимущества:\n' +
            '\n' +
            'Преимущества токенизированного представления данных.\n' +
            'Недостатки:\n' +
            '\n' +
            'При перестановке местами слов или их частей могут получаться большие расстояния.\n' +
            '\n' +
            'Расстояния между совершенно разными короткими словами оказываются небольшими, а между очень похожими длинными словами — значительными.\n' +
            '\n' +
            '3.5. Расстояние Колмогорова\n' +
            '\n' +
            'При реализации алгоритмов Колмогоровской сложности начала текст разделяется на токены, далее идет поиск длиннейшей неточно повторяющейся подстроки, заканчивающейся в текущем символе, кодируется указателем на предыдущее размещение и сохраняет информацию о внесенных поправках. В результате, будут найдены неточно совпавшие пары подстрок.\n' +
            '\n' +
            'Расстояние между строками показывает, сколько информации содержит строка, и вычисляется [7]: , где K(x) — Колмогоровская сложность строки x. Чем ближе функция расстояния к 0, тем более схожи программы. Сложность Колмогорова в строке x является минимальной длиной программы, необходимой для вычисления конкретной строки x.\n' +
            '\n' +
            'Колмогоровская сложность применяется к строкам, но не применяется к программам. Было доказано, что невозможно вычислить колмогоровскую сложность строки [8].\n' +
            '\n' +
            'Преимущества:\n' +
            '\n' +
            'Универсальность: две программы, близкие относительно любой другой метрики, будут близкими и относительно данной.\n' +
            '\n' +
            'Быстрота.\n' +
            '\n' +
            'Преимущества токенизированного представления данных.\n' +
            '\n' +
            'Общие маленькие подстроки игнорируются, поэтому алгоритм не чувствителен к малым случайно совпавшим участкам кода.\n' +
            '\n' +
            'При разбиении совпавшего участка кода на несколько частей вставкой или перестановкой одного или нескольких блоков кода, функция схожести слабо изменяется.\n' +
            '\n' +
            'Алгоритм нечувствителен к перестановкам больших фрагментов кода.\n' +
            '\n' +
            'Недостатки:\n' +
            '\n' +
            'Возможноть совпадения токенизированного представления программ, но несовпадения в исходных кодах программ.\n' +
            '\n' +
            'Невозможность использования на практике.\n' +
            '\n' +
            'Сравнение описанных алгоритмов представлено в таблице 2.\n' +
            '\n' +
            'Таблица2. Сравнение описанных алгоритмов\n' +
            '\n' +
            'Метрика\tВремя\tПамять\tВероятность найти похожие программы\tВероятность, что похожие программы действительно похожие\n' +
            'Численные значения атрибутов\tКвадратичное\tЛинейная\tВысокая\tНизкая\n' +
            'Наибольшая общая подпоследовательность\tКвадратичное\tЛинейная\tОчень высокая\tНизкая\n' +
            'Расстояние Жаккара\tКвадратичное\tЛинейная\tВысокая\tВысокая\n' +
            'Расстояние Левенштейна\tКвадратичное\tКвадратичная, сводится к O(min{m,n})\tОчень высокая\tВысокая\n' +
            'Расстояние Колмогорова\tСверхлинейное\t.\t.\t.\n' +
            'Наилучшее время показывает расстояние Колмогорова, однако его невозможно реализовать на практике. Затраты памяти наихудшие у расстояния Левенштейна. Следует отметить, что для выполнения задач важно качество преобразований текста, а затраты менее важны. Наивысшую вероятность найти похожие программы показывает расстояние Левенштейна.\n' +
            '\n' +
            'Выбор метода решения\n' +
            'Для успешного обнаружения плагиата данные разбираются с учетом:\n' +
            '\n' +
            'Чувствительности к пробелам и символам.\n' +
            'При сопоставлении текстов программ следует игнорировать дополнительные пробелы, комментарии, а также имена переменных.\n' +
            '\n' +
            'Подавления шума.\n' +
            'Обнаружение коротких совпадений не показательно, так как одно слово может встречаться в двух программах, потому что они написаны на одном языке. Все совпадения должны быть достаточно большими, чтобы считать, что программы скопированы.\n' +
            '\n' +
            'Независимости от положения. Перестановка переменных или порядка строк в программе не должны влиять на обнаруженные совпадения. Добавление или удаление символов в тексте также не должно влиять на набор совпадений.\n' +
            'Исходный код программы разделяется на токены, так как это представление даст наиболее соответствующий требованиям результат. Многие компиляторы используют разделение текста на лексемы, а затем обрабатывают их список с помощью конечного автомата, преобразующий лексемы в токены. Библиотеки языка программирования Python позволяют обрабатывать текст без поиска лексем и преобразования их в токены, а делают токенизацию за один шаг.\n' +
            '\n' +
            'Так как расстояние Левенштейна удовлетворяет требованиям, имеет наивысшую вероятность найти правильный результат, то реализован будет он.\n' +
            '\n' +
            'Работа алгоритма будет осуществляться по схеме:\n' +
            '\n' +
            'Преобразование нежелательных различий между документами.\n' +
            '\n' +
            'Задание метрики (критерия близости).\n' +
            '\n' +
            'Реализация нахождения расстояния Левенштейна.\n' +
            '\n' +
            'Составление матрицы расстояний для определения похожести текстов.\n' +
            '\n' +
            'Программа должна показывать, насколько коды программы похожи между собой.\n' +
            '\n' +
            'Описание метода решения\n' +
            'Реализован модуль, который сначала разбивает каждую программу из массива решений студетов по предмету Математические Пакеты за 2015 и 2017 года на токены с помощью библиотеки tokenize. Далее сформированы списки из токенов для каждой программы. Реализован алгоритм нахождения расстояния Левенштейна для сравнения каждой программы с каждой. Результат записывается в файл формата csv, где содержатся названия сравниваемых программ и расстояния между ними.\n' +
            '\n' +
            'Заключение\n' +
            'В результате выполнения работы была разработан программный модуль, осуществляющий поиск плагиата в кодах программ. Исходный код программы разделяется на токены, так как токенизация позволяет сохранять существенные и игнорировать легко модифицируемые детали кода программы. Для того, чтобы этот программный продукт удовлетворял требованиям (чувствительности к пробелам и символам, подавления шума, независимости от положения), проведен обзор метрик для обнаружения плагиата в текстах программ. Расстояние Левенштейна удовлетворяет требованиям и имеет наивысшую вероятность найти правильный результат: вероятность найти похожие программы, вероятность того, что похожие программы действительно похожие очень высокие. Недостатком решения являются затраты памяти на расчет расстояния Левенштейна. Но следует отметить, что для выполнения задач важно качество преобразований текста, а затраты менее важны. Преимуществом является открытый исходный код.\n' +
            '\n' +
            'Программный модуль был протестирован на реальных данных: решениях задач студентов по программированию за 2015, 2017 года. Расстояние Левенштейна между текстами программ соответствует степени их похожести.\n' +
            '\n' +
            'Для наглядной демонстрации результатов планируется построить кластеры, которые объединяют группы похожих решений.\n' +
            '\n' +
            'Список литературы\n' +
            '[1] Бобкова О. В., Давыдов С. А., Ковалева И. А.Плагиат как гражданское правонарушение // Патенты и лицензии. — 2016. — № 7.\n' +
            '\n' +
            '[2] Бойцов Л. М. Использование хеширования по сигнатуре для поиска по сходству //Прикладная математика и информатика. М. Изд-во факультета ВМиК, МГУ. – 2000. – №. 7. - C. 135-154.\n' +
            '\n' +
            '[3] Schütze H., Manning C. D., Raghavan P. Introduction to information retrieval. – Cambridge University Press, 2008. – Т. 39. C. 19-47.\n' +
            '\n' +
            '[4] Ullman J. D., Aho A. V., Hirschberg D. S. Bounds on the complexity of the longest common subsequence problem //Journal of the ACM (JACM). – 1976. – Т. 23. – №. 1. – С. 1-12.\n' +
            '\n' +
            '[5] Lueker G. S. Improved bounds on the average length of longest common subsequences //Journal of the ACM (JACM). – 2009. – Т. 56. – №. 3. – С. 17.\n' +
            '\n' +
            '[6] Левенштейн В. И. Двоичные коды с исправлением выпадений, вставок и замещений символов //Доклады Академии наук. – Российская академия наук, 1965. – Т. 163. – №. 4. – С. 845-848.\n' +
            '\n' +
            '[7] Vitanyi P. M. B., Li M. An introduction to Kolmogorov complexity and its applications. – Heidelberg : Springer, 1997. – Т. 34. – №. 10.\n' +
            '\n' +
            '[8] Успенский В., Шень А., Верещагин Н. Колмогоровская сложность и алгоритмическая случайность. – Litres, 2017. - C. 575.')
    })
    $('#sample5').click( function() {
        textarea.html('Исследование алгоритмов сокращение размерности пространства признаков в задаче анализа клиентских данных\n' +
            'Ключевые слова: отбор данных, анализ клиентских данных, размерность пространства признаков, машинное обучение\n' +
            '\n' +
            'Аннотация\n' +
            'В данной работе была поставлена цель исследовать и определить самые точные и быстрые алгоритмы сокращения размерности пространства признаков в задаче анализа клиентских данных, так как большие базы данных могут содержать зашумляющую или дублирующую информацию, от которой следует избавиться для улучшения качества обработки данных. Для этого был проведен обзор существующих решений отбора и выделения признаков и выделены сильные и старые стороны. Результаты данной работы показали, что самыми точными и быстрыми алгоритмами являются одномерный отбор, использующий в качестве статического критерия Хи-квадрат и метод библиотеки scikit-learn SelectFromModel, принимающий оценки параметров модели логистической регрессии.\n' +
            '\n' +
            'Введение\n' +
            'На сегодняшний день данные, описывающую ту или иную предметную область, часто содержат в себе большое количество различных признаков, которые определяют свойства каких-либо процессов или предметов. При этом эти наборы данных могут достигать колоссальных размеров, благодаря чему работа с данными превращается в очень ресурсозатратные и долгие процессы. Сокращение размерности пространства признаков влечет за собой уменьшение используемой памяти и избавление от зашумленной и дублирующей информации. Для достижения данной цели используются различные алгоритмы машинного обучения, каждый из которых имеет свою индивидуальную степень эффективности и обоснованности для своей области применения. Клиентские базы не являются исключением, они часто содержат в себе большие массивы информации, часть из которых является избыточной. Поэтому определение способов сокращения пространства признаков для более точного анализа клиентских данных - проблема, актуальность которой только возрастает с течением время. Объектом исследования являются алгоритмы сокращения размерности пространства признаков, а предметом – различные характеристики алгоритмов такие, как принципе работы, точность, скорость и наглядность результата. В статье решаются задачи: Обзор существующих алгоритмов сокращения пространства признаков. Формирование критериев для определения оптимальных алгоритмов. Обзор рассматриваемых в статье алгоритмов. Исследование характеристик рассмотренных алгоритмов. Сравнение эффективности алгоритмов согласно выявленным критериям.\n' +
            '\n' +
            'Сравнение аналогов\n' +
            'Принцип отбора аналогов Для того, чтобы определить наилучшие алгоритмы необходимо провести обзор на современные решения уменьшения количества параметров. При поиске существующих аналогов решения задачи сокращения размерности пространства признаков, было акцентировано внимание на работы во всех сферах деятельности, связанных с признаками, в том числе медицина, разработка оборудования и т.д. Были рассмотрены как чисто теоретические выкладки, так и выполненные на практике решения. Научная статья "Методы снижения размерности пространства статистических данных" [1]. Рассмотрено несколько способов снижения размерности признаков:\n' +
            '\n' +
            'Метод главных компонент.\n' +
            'Факторный анализ.\n' +
            'Многомерное шкалирование.\n' +
            'Алгоритмы снижения размерности в автоматизированном системно-когнитивном анализе. Приведено теоретическое описание алгоритмов и методы их оценивания. Рассмотренные алгоритмы выделяют признаки, а не сокращают, поэтому их применение в работе с данными о клиентах находится под вопросом. Научная статья "Снижение размерности признакового пространства в задачах идентификации излучающих объектов по данным радиомониторинга с использованием искусственных нейронных сетей" [2]. Разбор метода анализа главных компонент и использования автоассоциативных нейронных сетей. Анализ возможностей искусственных нейронных сетей показал, что автоассоциативные нейронных сети позволяют минимизировать признаковое пространство без значительной потери информации в работе с радиосигналами. Научная статья "Алгоритмы и методы снижения пространства диагностичесчких признаков" [3]. Проводится сравнительный анализ методов снижения размерности пространства диагностических признаков в лечебной практике таких, как:\n' +
            'Кластерный анализ.\n' +
            'Метод главных компонент.\n' +
            'Метод экстремальной группировки параментров.\n' +
            'Многомерное шкалирование. Приведено теоретическое описание методов. Несмотря на исследование алгоритмов в сфере медицины в данной статье, эти алгоритмы могут быть применены и для других областей. Научная статья "Алгоритм GRAD для выбора информативного подпространства признаков" [4]. Проводится разбор алгоритмов AlDel, Grad и алгоритм комбинированного типа DX сокращения пространства признаков. Были проведены экспериментальные выкладки, проверяющие эффективность методов. Заключен вывод, что алгоритм GRAD, основанный на AdDel-методе наиболее целесообразен. Научная статья "A Survey of Feature Selection and Feature Extraction Techniques in Machine Learning" [5]. В статье описываются широко используемые техники отбора и выделения признаков. Даны описания методов отбора признаков:\n' +
            'Correlation Coefficien\n' +
            'BW-ration\n' +
            'PAV\n' +
            'mRmR\n' +
            'I-RELIEF\n' +
            'CMIM\n' +
            'INTERACT\n' +
            'Genetic Algorithm\n' +
            'SVM-REF Даны описания методов выделения признаков:\n' +
            'Independent Component Analysis\n' +
            'Principle Component Analysis\n' +
            'Nonlinear Principle Components Analysis\n' +
            'Probabilistic Principle Component Analysis\n' +
            'Kernel Principle Component Analysis Был сделан вывод, что для таких задач, как выявление болезней, более удобным являются методы выявления признаков, в то время, как для избавления от зашумляющих и дублирующих признаков предназначены алгоритмы сокращения. Критерии сравнения аналогов Возможность настройки алгоритмов. Работа алгоритмов на данных различных размеров может иметь разную эффективность, поэтому необходимо иметь возможность настройки параметров алгоритма. Количество рассмотренных алгоритмов. Большое число алгоритмов позволяет определить, как можно больше эффективных сильных сторон для сравнения. Тип алгоритма сокращения. Алгоритмы могут не только сокращать количество признаков, но и преобразовывать их в новые, из-за чего данные могут потерять свою наглядность для аналитиков. Поэтому следует различать методы сокращения и выделения. Сравнение по критериям представлено в табл. 1 Таблица 1 – Сравнение по критериям № аналога | 1 | 2 | 3 | 4 | 5 ---------------------------------|---------|---------|---------|---------|---------------------- Возможность настройки алгоритмов | + | + | + | - | + Количество алгоритмов | 4 | 2 | 4 | 3 | 14 Тип алгоритма сокращения |выделение|выделение|выделение|сокращене|сокращение и выделение Выводы по итогам сравнения В вышеразобранных статьях подробно описано большинство современных способов сокращения размерности пространства признаков, но также стоит отметить, что практическая реализация алгоритмов отсутствует, поэтому количественных критериев сравнения определить не удалось. В настоящее время разработаны алгоритмы для отдельных областей таких, как медицина или исследование физических явлений, но эти прикладные программы не покрывают всей области решения проблемы большого количества параметров в различных сферах производства и науки, в том числе и клиентских баз данных. Алгоритмы первой, второй и третьей статьи являются методами выделения признаков, поэтому их использование в анализе данных о клиентах может не соответствовать условиям. Наша цель - определить характеристики алгоритма, работающего для клиентских данных, поэтому вторая и третья статья, базирующиеся на исследовании радиосигналов и медицинских дигнозов, менее актуальны в нашей работе.\n' +
            'Выбор метода решения\n' +
            'По итогам сранения существующих аналогов были сформированы требования для одного метода или нескольких методов, которые бы могли привести данные о клиентах в пригодный для дальнейшего анализа вид - то есть сократить все зашумляющие и дублирующие признаки. При этом разработанные методы не должны зависеть от количества признаков или размера анализируемых данных, а должны иметь возможность настраивания параметров алгоритма для конкретных данных. Алгоритмы должны иметь высокую точность результата, высокую скорость работы и частично позаимствованные сильные стороны уже существующих алгоритмов сокращения. При этом конкретно для задачи анализа клиентских данных акцент должен быть сделан на методах отбора признаков, а не выделения.\n' +
            '\n' +
            'Описание метода решения\n' +
            'Описание рассматриваемых алгоритмов сокращения пространства признаков. Для сокращения количества признаков в работе используются такие методы, как сокращение признаков с низкой вариативностью, одномерный отбор и метод главных компонент. Также рассматриваются методы отбора признаков такие, как функция SelectFromModel библиотеки scikit-learn и алгоритм рекурсивного исключения признаков. Эти методы используют результаты работы моделей-оценщиков, которые представлены в данной работе логистической регрессией, случайным лесом и сверхслучайным лесом. Сокращение признаков с низкой вариативностью. Удаляются все объекты, дисперсия которых не соответствует некоторому порогу. По умолчанию метод удаляет все объекты с нулевой дисперсией, т. е. объекты, имеющие одинаковое значение во всех выборках. Одномерный отбор. Данный метод отбирает признаки, имеющие наиболее выраженную взаимосвязь с целевой переменной с помощью статистического критерия Хи-квадрат. Формула Хи-квадрата приведена ниже: χ^2=∑▒〖(observed-expected)〗^2/expected Метод главных компонент (PCA). Метод позволяет сократить размерность пространства признаков данных с помощью преобразования на основе линейной алгебры путем проецирования данных в пространство меньшей размерности. Вычисление главных компонент сводится к вычислению собственных векторов и собственных значений ковариационной матрицы исходных данных. Данный алгоритм является единственным среди представленных алгоритмом обучения без учителя, то есть для его работы не нужен целевой параметр. Метод SelectFromModel. Метод принимает на вход модель-оценщик, который предоставляет значения для каждого из параметров, которые сравниваются с параметром функции "threshold". Из данных удаляются признаки, значения которых ниже порогового значения. Метод рекурсивного исключения признаков. Данный алгоритм более известен, как Recursive Feature Elimination (RFE). Алгоритм получает на вход модель-оценщик, предоставляющий значения для каждого из параметров. На основе этих значений производится поочередное удаление признаков из первоначального набора. Рассматривая все меньшие наборы признаков, алгоритм сохраняет только наиболее важные до тех пор, пока в наборе не останется определенное параметром "n_features_to_select" количество признаков. Логистическая регрессия. Логистическая регрессия применяется для прогнозирования вероятности возникновения некоторого события по значениям множества признаков. Для этого вводится зависимая переменная, принимающая значения 0 и 1 и множество независимых переменных на основе значений которых требуется вычислить вероятность принятия того или иного значения зависимой переменной. В модели логистической регрессии имеются веса признаков, которые можно считать за важность параметров в задаче сокращения размерности пространства этих признаков. Чем ближе к нулю вес, тем меньшее влияние имеет этот признак на решение. Случайный лес. Случайный лес - модель, состоящая из множества деревьев решений. Дерево принятия решений — средство поддержки принятия решений. Структура дерева представляет собой "листья" и "ветки". На "ветках" дерева решения записаны атрибуты, от которых зависит целевая функция, в "листьях" записаны значения целевой функции, а в остальных узлах — атрибуты, по которым различаются случаи. Классифицирование происходит путем спуска по дереву до листа и выдачи соответствующего значения. В каждом узле дерево решений ищет такое значение определённого параметра, которое приведёт к максимальному уменьшению загрязнения Джини. Загрязнение Джини — вероятность неверной маркировки в узле случайно выбранного образца. Загрязнение Джини узла равно 1 минус сумма отношений класса к общему количеству образцов, возведённых в квадрат, для каждого из множества классов. Случайный лес - модель, в которой для построения множества деревьев выбирается случайная выборка образцов из набора данных. При разделении узлов выбираются случайные наборы параметров. Значимость параметра в случайном лесу — это суммарное уменьшение загрязнения Джини во всех узлах, использующих этот параметр для разделения. Именно это значение является важностью признака, по которому можно судить о его необходимости в наборе данных. Сверхслучайные деревья. В сверхслучайных деревьях, как и в случайных лесах, используется случайное подмножество возможных признаков, но вместо поиска наиболее оптимальных порогов, пороговые значения произвольно выбираются для каждого возможного признака, и наилучший из этих случайно генерируемых порогов выбирается, как лучшее правило для разделения узла. Исследование характеристик рассмотренных алгоритмов Для сравнения описанных выше методов были проведены замеры скорости и точности работы этих алгоритмов. В качестве языка программирования был выбрал python, так как для него разработано большое число библиотек, которые широко используются в машинном обучении, в том числе библиотека scikit-learn, содержащая некоторые из алгоритмов отбора данных. В качестве данных был использован набор данных [6], содержащий после проведения первоначального исключения бесцельной информации 17 признаков и 5300 кортежей. Так как все представленные алгоритмы кроме сокращения признаков с низкой вариативностью и PCA являются алгоритмами обучения с учителем, был отобран признак, определенный как целевой. Каждый набор данных, полученный в качестве результата работы одного из алгоритмов применяется для построения модели, основанной на логической регрессии. Далее производится расчет целевого параметра тестовых данных (20% от общего числа набора) и сравнивается с оригинальным. Точность алгоритма сокращения признаков определяется отношением правильных прогнозов ко всем. Сокращение признаков с низкой вариативностью. В библиотеке scikit-learn метод реализован функцией sklearn.feature_selection.VarianceThreshold (версия v0.22) [7]. Результаты применения метода на используемом наборе данных представлены в табл. 2. Первый результат в табл. 2 характеризует прогноз без применения данного метода. Таблица 2 – Результаты применения метода VarianceThreshold\n' +
            '\n' +
            'threshold\tКоличество исключенных признаков\tТочность\tВремя работы\n' +
            '–     |                –                 | 0.809606 |       –\n' +
            '0     |                0                 | 0.809606 |   0.003509\n' +
            '0.005 | 1 | 0.808733 | 0.003040 Как показали результаты, точность модели только ухудшилась с использованием метода. Одномерный отбор. Для реализации метода была использована функция sklearn.feature_selection.SelectKBest (версия v0.22) [8], с параметром score_func = chi2. Точность для различных наборов данных после проведения сокращения с помощью данного алгоритма представлена на рис. 1. Время работы метода составляет – 0.006986. В наивысших точках (при количестве признаков 11, 12 и 14) кривая имеет значение 0.810480.\n' +
            '\n' +
            'Рисунок 1 – Точность одномерного отбора для различного числа признаков Метод главных компонент. В библиотеке scikit-learn метод реализован функцией sklearn.decomposition.PCA (версия v0.22) [9]. Зафиксированные результаты работы представлены на рис. 2. Скорость работы алгоритма составляет 0.011030 сек.\n' +
            '\n' +
            'Рисунок 2 – Точность МГК для различного числа признаков Методы SelectFromModel и рекурсивного исключения признаков. В библиотеке scikit-learn алгоритмы имеет реализацию в виде функций sklearn.feature_selection.SelectFromModel (версия v0.22) [10] и sklearn.feature_selection.RFE (версия v0.22) [11] соответственно. Модели логистической регрессии, случайного леса и сверхслучайных деревьев представлены функциями sklearn.linear_model.LogisticRegression (версия v0.22) [12], sklearn.ensemble.RandomForestClassifier (версия v0.22) [13] и sklearn.ensemble.ExtraTreesClassifier (версия v0.22) [14] соответственно. Результаты эффективности работы алгоритмов представлены в табл. 3 и на рис. 3-4.\n' +
            '\n' +
            'Таблица 3 – Результаты эффективности работы алгоритмов SelectFromModel и RFE\n' +
            '\n' +
            'Метод\tSelectFromModel\tRFE\n' +
            'Модель\tLR\tRFC\n' +
            '-------------------\t----------\t----------\n' +
            'Скорость\t0.057502\t0.237182\n' +
            'Наивысшая точность\t0.810480\t0.809606\n' +
            'Рисунок 3 – Точность метода SelectFromModel для различного числа признаков\n' +
            '\n' +
            'Рисунок 4 – Точность RFE для различного числа признаков Модели логистической регрессии и случайного леса для методов SelectFromModel и RFE практически совпали, поэтому для сравнения этих алгоритмов был выведен график, на котором методы используют модель сверхслучайных деревьев, предоставленный на рис. 5.\n' +
            '\n' +
            'Рисунок 5 – Точность модели сверхслучайных деревьев для различного числа признаков Сравнение эффективности алгоритмов. Применение метода сокращения признаков с низкой вариативностью привело к уменьшению точности решения. Это произошло по причине высоковариативности используемых данных. Поэтому данный метод наиболее эффективен для более объемных данных, в которых имеется несколько десятков признаков. Одномерный отбор показал наиболее высокий уровень точности среди рассмотренных алгоритмов – 0.810480. Метод главных компонент показал высокую точность только при уменьшении пространства признаков на 1-3 признака тогда, как при дальнейшем сокращении точность падает. В алгоритмах SelectFromModel и рекурсивного исключения признаков среди моделей наивысшую точность с незначительным перевесом показала логистическая регрессия. Для первого метода хуже всего показала себя модель случайного леса, для второго – сверхслучайных деревьев. Если сравнивать эти два алгоритма, то результаты практически идентичны, исключая случай применения классификатора сверхслучайных деревьев, где средняя точность метода SelectFromModel оказалась больше (на 0.6%) Меньшее время работы показали алгоритмы сокращения признаков с низкой вариативностью, одномерный отбор, метод главных компонент и SelectFromModel, реализующий оценку логистической регрессии – меньше 0.1 сек. Самым продолжительным оказался алгорит RFE, использующий модель случайного леса.\n' +
            '\n' +
            'Выводы\n' +
            'В ходе работы было установлено, что наибольшую точность (0.810480) сокращения размерности пространства признаков имеет одномерный отбор, использующий в качестве статического критерия Хи-квадрат. Скорость данного алгоритма высокая по сравнению с другими рассмотренными алгоритмами. Менее точный результат показали методы рекурсивного исключения признаков и SelectFromModel, использующих модели-оценщики логистической регрессии, случайного леса и сверхслучайных деревьев. Для первой и второй модели средняя точность алгоритмов оказались приблизительно одинаковой, но для сверхслучайных деревьев метод SelectFromModel оказался точнее на 0.6%. Также среди моделей оценщиков наибольшую точность показала логистическая регрессия (средняя точность на 1.2% больше случайного леса и на 1% – сверхслучайных деревьев). Скорость данных алгоритмов относительно других рассмотренных оказалась низкой, но это можно регулировать количеством оценщиков в моделях. Сокращение признаков с низкой вариативностью и метод главных компонент показали высокую скорость работы, но низкую точность. Также стоит отметить, что все рассмотренные алгоритмы предоставляют возможность регулировки количества сохраняемых параметров, а в случае моделей-оценщиков еще и количество оценщиков для настройки точности, и скорости работы алгоритма. В качестве перспективного вектора развития можно определить исследование других современных алгоритмов предобработки и анализа данных, а также усовершенствование рассмотренных в статье: комбинирование методов, использование нейросетей.\n' +
            '\n' +
            'Список литературы\n' +
            'Орлов Александр Иванович, Луценко Евгений Вениаминович Методы снижения размерности пространства статистических данных // Научный журнал КубГАУ - Scientific Journal of KubSAU. 2016. №119. URL: https://cyberleninka.ru/article/n/metody-snizheniya-razmernosti-prostranstva-statisticheskih-dannyh (дата обращения: 23.12.2019).\n' +
            'Аджемов С. С., Терешонок М. В., Чиров Д. С. Снижение размерности признакового пространства в задачах идентификации излучающих объектов по данным радиомониторинга с использованием искусственных нейронных сетей // T-Comm. 2008. №6. URL: https://cyberleninka.ru/article/n/snizhenie-razmernosti-priznakovogo-prostranstva-v-zadachah-identifikatsii-izluchayuschih-obektov-po-dannym-radiomonitoringa-s (дата обращения: 23.12.2019).\n' +
            'Максюта Н. В., Поворознюк А. И. Лгоритмы и методы снижения пространства диагностических признаков // Вестник НТУ ХПИ. 2005. №46. URL: https://cyberleninka.ru/article/n/lgoritmy-i-metody-snizheniya-prostranstva-diagnosticheskih-priznakov (дата обращения: 23.12.2019).\n' +
            'Загоруйко Н. Г., Кутненко О. А. Алгоритм GRAD для выбора информативного подпространства признаков //URL: http://math. nsc. ru/~ wwwzag/7. GRAD. pdf (дата обращения: 12.01. 2016). – 2005.\n' +
            'Khalid S., Khalil T., Nasreen S. A survey of feature selection and feature extraction techniques in machine learning //2014 Science and Information Conference. – IEEE, 2014. – С. 372-378.\n' +
            'Bank Marketing //URL: https://www.kaggle.com/henriqueyamahata/bank-marketing-classification-roc-f1-recall/data (дата обращения: 23.12.2019).\n' +
            'class sklearn.feature_selection.VarianceThreshold //URL: https://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.VarianceThreshold.html?highlight=variancethreshold#sklearn.feature_selection.VarianceThreshold (дата обращения: 23.12.2019).\n' +
            'class sklearn.feature_selection.SelectKBest //URL: https://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.SelectKBest.html?highlight=selectkbest#sklearn.feature_selection.SelectKBest (дата обращения: 23.12.2019).\n' +
            'class sklearn.decomposition.PCA //URL:\n' +
            'class sklearn.feature_selection.SelectFromModel //URL: https://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.SelectFromModel.html?highlight=selectfrommodel#sklearn.feature_selection.SelectFromModel (дата обращения: 23.12.2019).\n' +
            'class sklearn.feature_selection.RFE //URL: https://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.RFE.html?highlight=rfe#sklearn.feature_selection.RFE (дата обращения: 23.12.2019).\n' +
            'class sklearn.linear_model.LogisticRegression //URL: https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html (дата обращения: 23.12.2019).\n' +
            'class sklearn.ensemble.RandomForestClassifier //URL: https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html?highlight=randomforest#sklearn.ensemble.RandomForestClassifier (дата обращения: 23.12.2019).\n' +
            'class sklearn.ensemble.ExtraTreesClassifier //URL: https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.ExtraTreesClassifier.html?highlight=extratrees#sklearn.ensemble.ExtraTreesClassifier (дата обращения: 23.12.2019).')
    })
    $('#sample6').click( function() {
        textarea.html('Суть разработки программного обеспечения\n' +
            '— Нужно проделать 500 отверстий в стене, так что я сконструировал автоматическую дрель. В ней используются элегантные точные шестерни для непрерывной регулировки скорости и крутящего момента по мере необходимости.\n' +
            '— Отлично, у неё идеальный вес. Загрузим 500 таких дрелей в пушку, которые мы сделали, и выстрелим в стену.\n' +
            '\n' +
            'Я занимаюсь программированием уже 15 лет. Но в последнее время при разработке не принято думать об эффективности, простоте и совершенстве: вплоть до того, что мне становится грустно за свою карьеру и за IT-отрасль в целом.\n' +
            '\n' +
            'Для примера, современные автомобили работают, скажем, на 98% от того, что физически позволяет нынешняя конструкция двигателя. Современная архитектура использует точно рассчитанное количество материала, чтобы выполнять свою функцию и оставаться в безопасности в данных условиях. Все самолёты сошлись к оптимальному размеру/форме/нагрузке и в основном выглядят одинаково.\n' +
            '\n' +
            'Только в программном обеспечении считается нормальным, если программа работает на уровне 1% или даже 0,01% от возможной производительности. Ни у кого вроде нет возражений. Люди даже гордятся, насколько неэффективно работает программа, типа «зачем беспокоиться, компьютеры достаточно быстрые»:\n' +
            '\n' +
            '@tveastman: Я каждый день запускаю программу на Python, она выполняется за 1,5 секунды. Я потратил шесть часов и переписал её на Rust, теперь она выполняется за 0,06 секунды. Это ускорение означает, что моё время окупится через 41 год, 24 дня :-)\n' +
            '\n' +
            'Наверное, вы слышали такую мантру: «Время программиста дороже времени компьютера». Это означает, что мы тратим компьютерное время в беспрецедентных масштабах. Вы бы купили машину с расходом 100 литров на 100 километров? Как насчёт 1000 литров? С компьютерами такое происходит постоянно.\n' +
            '\n' +
            'Всё невыносимо медленно\n' +
            '\n' +
            'Оглянитесь вокруг: портативные компьютеры в тысячи раз мощнее тех, что привели человека на Луну. Тем не менее, каждый второй сайт не может обеспечить плавную прокрутку страницы на 60 FPS на последнем топовом MacBook Pro. Я могу комфортно играть в игры, смотреть видео 4K, но не прокручивать веб-страницы! Это нормально?\n' +
            '\n' +
            'Почтовому приложению Google Inbox в браузере Chrome от той же Google, требуется 13 секунд, чтобы открыть письмо среднего размера:\n' +
            '\n' +
            'This is, in real time, how long it takes for Google Inbox running in Google Browser to open an email. Not the shortest one, but still, it’s just text and pictures! Go Web Stack go! pic.twitter.com/CvqsFiIUuc\n' +
            '\n' +
            '— Nikita (@nikitonsky) February 28, 2018\n' +
            '\n' +
            'Он ещё анимирует пустые белые формы вместо того, чтобы показать их содержимое, потому что это единственный способ анимировать что-то на веб-странице с приличной производительностью. Нет, не 60 FPS, а скорее «настолько быстро, насколько возможно на этой странице». С нетерпением жду, что же веб-сообщество предложит, когда дисплеи 120 Гц станут мейнстримом. Они еле справляются с 60 Гц.\n' +
            '\n' +
            'Обновление Windows 10 занимает 30 минут. Что можно делать так долго? Этого времени достаточно, чтобы полностью отформатировать мой SSD-накопитель, загрузить свежий билд и установить его примерно 5 раз подряд.\n' +
            '\n' +
            '\n' +
            '\n' +
            'Павел Фатин: Набор текста в редакторе — относительно простой процесс, поэтому даже 286 могли обеспечить довольно плавный процесс набора.\n' +
            '\n' +
            'В современных текстовых редакторах задержка при наборе больше, чем в 42-летнем Emacs. Текстовые редакторы! Что может быть проще? На каждое нажатие клавиши, нужно всего лишь обновить крошечную прямоугольную область на экране, а современные текстовые редакторы не могут сделать это за 16 мс. А это много времени. МНОГО. 3D-игра заполняет экран сотнями тысяч (!!!) полигонов за те же 16 мс, а также обрабатывает ввод, пересчитывает мир и динамически загружает/выгружает ресурсы. Как так?\n' +
            '\n' +
            'Тенденция такова, что софт вовсе не становится быстрее и функциональнее. Мы получаем более быстрое оборудование, на котором софт с теми же функциями ворочается медленнее, чем раньше. Всё работает намного медленнее максимальной скорости. Никогда не задумывались, почему ваш телефон загружается от 30 до 60 секунд? Почему он не может загрузиться, скажем, за одну секунду? Здесь нет никаких физических ограничений. Лично мне бы такое понравилось. Хочется, чтобы разработчики достигли предела, используя каждый бит для производительности.\n' +
            '\n' +
            'Всё ОГРОМНОЕ\n' +
            '\n' +
            'И ещё это раздутие. Веб-приложения могут открываться в десять раз быстрее, если просто заблокировать рекламу. Google умоляет всех прекратить тормоза с помощью инициативы AMP — технического решения, для которого не нужны какие-либо технологии, просто немного здравого смысла. Если удалить раздувание, интернет станет работать на сумасшедшей скорости. Неужели это сложно понять?\n' +
            '\n' +
            'Система Android без приложений занимает почти 6 ГБ. Просто задумайтесь на секунду, насколько неприлично огромное это число. Что там, фильмы в HD-качестве? Думаю, в основном код: ядро, драйверы. Ещё какие-то ресурсы, конечно, но они не могут быть такими большими. Сколько же драйверов вам нужно для телефона?\n' +
            '\n' +
            '\n' +
            '\n' +
            'Windows 95 занимала 30 МБ. Сегодня у нас есть веб-страницы тяжелее, чем эта ОС! Windows 10 уже 4 ГБ, то есть в 133 раза больше. Но разве она в 133 раза лучше? Я имею в виду, функционально они практически одинаковы. Да, у нас появилась Кортана, но я сомневаюсь, что она весит 3970 МБ. Но это Windows 10, неужели Android должен быть ещё в полтора раза больше?\n' +
            '\n' +
            'Приложение клавиатуры Google как ни в чём не бывало съедает 150 МБ. Эта программа рисует 30 клавиш на экране — она правда в пять раз сложнее, чем вся Windows 95? Приложение Google app, в основном, просто пакет для Google Web Search, занимает 350 МБ! Сервисы Google Play, которыми я не пользуюсь (я не покупаю там книги, музыку или видео) — 300 МБ, которые просто сидят здесь и которые нельзя удалить.\n' +
            '\n' +
            '\n' +
            '\n' +
            'После установки всех необходимых приложений (социальные сети, чаты, карты, такси, банки и т. д.) на телефоне остался всего 1 гигабайт для фотографий. И это вообще без игр и музыки! Помните времена, когда ОС, приложения и все ваши данные помещались на дискету?\n' +
            '\n' +
            'Ваша программа для заметок наверняка написана в Electron и, таким образом, поставляется с драйвером для контроллера Xbox 360, умеет показывать 3D-графику, воспроизводить аудио и фотографировать с помощью веб-камеры.\n' +
            '\n' +
            '\n' +
            '\n' +
            'Простой текстовый чат всегда славился скоростью и малым потреблением памяти. Так что Slack — это пример очень ресурсоёмкого приложения. Я имею в виду, что чат и текстовый редактор — это самые базовые вещи, они должны потреблять меньше всего ресурсов. Добро пожаловать в 2018 год.\n' +
            '\n' +
            'Вы можете сказать, что они хотя бы работают. Но увеличение размера — не значит улучшение. Это значит, что кто-то потерял контроль. Мы больше не знаем, что происходит. Увеличение размера — это повышение сложности, снижение производительности и надёжности. Это ненормально и не должно считаться нормой. На раздутый размер нужно сразу обращать внимание — и держаться от них подальше.\n' +
            '\n' +
            'Всё гниёт\n' +
            '\n' +
            'Android-телефон на 16 ГБ был прекрасен три года назад. Сегодня под Android 8.1 он еле работает, потому что каждое приложение увеличилось минимум вдвое без видимых причин. Дополнительных функций нет. Они не стали быстрее и внешний вид не изменился. Они просто… раздулись?\n' +
            '\n' +
            'iPhone 4s вышел с iOS 5, но едва может работать под управлением iOS 9. И это не потому, что iOS 9 намного лучше — в основном, система не изменилась. Но новое оборудование быстрее, поэтому они сделали программное обеспечение медленнее. Не волнуйтесь — вы получили захватывающие новые возможности, например… работа тех же приложений с той же скоростью! Не знаю.\n' +
            '\n' +
            'iOS 11 прекратила поддержку 32-разрядных приложений. Это значит, что если разработчик не готов вернуться и обновить приложение, скорее всего, вы не увидите снова эту отличную программу.\n' +
            '\n' +
            '@jckarter: Программу DOS можно заставить работать без изменений практически на любом компьютере, сделанном после 80-х годов. Приложение JavaScript может прекратить работу из-за завтрашнего обновления Chrome.\n' +
            '\n' +
            'Сегодняшние веб-страницы не будут работать в любом браузере через 10 лет (а может и раньше).\n' +
            '\n' +
            '«Нужно бежать со всех ног, чтобы только остаться на том же месте». Но смысл? Я могу постоянно покупать новые телефоны и ноутбуки, как все, но делать это лишь ради того, чтобы иметь возможность запускать все те же приложения, которые стали только медленнее?\n' +
            '\n' +
            'Думаю, что мы можем и должны исправить ситуацию. Сейчас все разрабатывают программы для сегодняшнего дня, изредка для завтрашнего. Но будет неплохо делать вещи, которые работают немного дольше.\n' +
            '\n' +
            'Хуже — значит лучше\n' +
            '\n' +
            'Сейчас никто ничего не понимает. И не хочет понимать. Мы просто выпускаем полусырую ерунду, надеемся на лучшее и называем это «здравым смыслом для стартапа».\n' +
            '\n' +
            'Веб-страницы просят обновиться, если что-то пошло не так. У кого есть время, чтобы найти причину неполадки?\n' +
            '\n' +
            '\n' +
            '\n' +
            'Любое веб-приложение выдаёт постоянный поток «случайных» ошибок JS, даже на совместимых браузерах.\n' +
            '\n' +
            'Вся архитектура баз данных веб/SQL построена на предпосылке (даже надежде), что никто не изменит данные, пока вы смотрите на открытую веб-страницу.\n' +
            '\n' +
            'Большинство приложений для совместной работы сделали «как смогли», там масса типичных сценариев, когда они теряют данные. Видели диалог «Какую версию сохранить?» Сегодня планка так низка, что пользователи рады даже этому вопросу.\n' +
            '\n' +
            '\n' +
            '\n' +
            'И нет, в моём мире не является нормальным приложение, которое говорит: «Я уничтожу часть твоей работы, только выбери какую».\n' +
            '\n' +
            'Linux намеренно убивает случайные процессы. И всё же это самая популярная серверная ОС.\n' +
            '\n' +
            'У меня каждое устройство регулярно выходит из строя так или иначе. Время от времени монитор Dell нужно аппаратно перезагружать, потому что в нём есть софт. AirDrop? Вам повезёт, если он обнаружит устройство, иначе что делать? Bluetooth? Спецификации настолько сложны, что устройства не будут устанавливать связь друг с другом, а периодические перезагрузки — оптимальный вариант.\n' +
            '\n' +
            '\n' +
            '\n' +
            'И я даже не упоминаю об Интернете вещей. Это настолько за гранью разумного, что даже нечего добавить.\n' +
            '\n' +
            'Я хочу гордиться своей работой. Я хочу делать рабочие, стабильные вещи. Для этого нужно понять, что конкретно мы разрабатываем, внутри и снаружи, а это невозможно сделать в раздутых, чрезмерно усложнённых системах.\n' +
            '\n' +
            'В программировании такой же хаос\n' +
            '\n' +
            'Кажется, что никто больше не заинтересован в качественных, быстрых, эффективных, долговечных, основательных решениях. Даже если давно известны эффективные решения, мы по-прежнему боремся с теми же проблемами: управление пакетами, системы сборки, компиляторы, конструкция языка, IDE.\n' +
            '\n' +
            'Системы сборки по своей сути ненадёжны и периодически требуют полной очистки, хотя у них есть вся информация для инвалидации. Ничто не мешает сделать процесс сборки надёжным, предсказуемым и на 100% воспроизводимым. Просто никто не думает, что это важно. NPM уже много лет находится в состоянии «иногда работает».\n' +
            '\n' +
            '@przemyslawdabek: Кажется, что rm-rf node_modules является неотъемлемой частью рабочего процесса в проектах Node.js/JavaScript.\n' +
            '\n' +
            'А время сборки? Никто не считает проблемой, что компилятор работает минуты или даже часы. А как же «время программиста дороже»? Почти все компиляторы, пре- и постпроцессоры значительно, иногда катастрофически увеличивают время сборки, не обеспечивая пропорционально существенных преимуществ.\n' +
            '\n' +
            '\n' +
            '\n' +
            'Вы ожидаете, что программисты будут принимать в основном рациональные решения, но иногда они делают прямо противоположное. Например, выбирая Hadoop даже если он медленнее, чем выполнение той же задачи на одном десктопном компьютере.\n' +
            '\n' +
            'Машинное обучение и ИИ отбросили программное обеспечение к гаданию на кофейной гуще во времена, когда большинство компьютеров даже не были достаточно надёжными.\n' +
            '\n' +
            '@rakhim: Когда приложение или сервис говорит «под управлением ИИ» или «на основе машинного обучения», я читаю это как «ненадёжное, непредсказуемое поведение, которое не поддаётся объяснению». Я держусь подальше от «ИИ», потому что хочу от компьютеров противоположного: надёжности, предсказуемости и логики.\n' +
            '\n' +
            'Мы засунули виртуальные машины в Linux, а затем засунули Docker в виртуальные машины, просто потому что никто не смог разобраться с бардаком, который производят большинство программ, языков и их окружений. Мы накрываем дерьмо одеялами, чтобы не убирать его. Например, «единый бинарник» остаётся ОГРОМНЫМ преимуществом Go. Нет бардака == успех.\n' +
            '\n' +
            '\n' +
            'Окружающая среда Python настолько загрязнилась, что мой ноутбук объявили зоной экологической катастрофы.\n' +
            'Примечание. Агентство по защите окружающей среды Python хотело залить его цементом и захоронить с картинкой на входе — предупреждением для будущих цивилизаций об опасности использовать sudo для установки случайных пакетов\n' +
            '\n' +
            'А зависимости? Люди бездумно ставят переусложнённые «полные пакеты» для простейших проблем, не думая о последствиях. Из этих зависимостей растут новые. В конечном итоге вы получаете дерево, которое является чем-то средним между фильмом ужасов (огромное и полное конфликтов) и комедией (нет причин, по которым мы добавили сюда эти пакеты, но вот они):\n' +
            '\n' +
            '\n' +
            '\n' +
            'Программы не могут работать несколько лет без перезагрузки. Иногда даже несколько дней — это слишком. Происходят случайные глюки, и никто не знает почему.\n' +
            '\n' +
            'Что ещё хуже, ни у кого нет времени остановиться и выяснить, что произошло. Зачем беспокоиться, если всегда есть другой выход. Поднять новый инстанс AWS. Перезапустить процесс. Удалить и восстановить базу данных. Написать скрипт, который будет перезапускать ваше сломанное приложение каждые 20 минут. Включить одни и те же ресурсы несколько раз: тяп-ляп — и в продакшн. Двигайся быстро, не трать время на исправление ошибок.\n' +
            '\n' +
            'Это не инженерная работа. Это просто ленивое программирование. Инженерная работа предполагает глубокое понимание производительности, структуры и ограничений того, что вы создаёте. Лепить халтуру из некачественного материала — совершенно противоположное занятие. Чтобы развиваться, мы должны понимать, что и зачем мы делаем.\n' +
            '\n' +
            'Мы застряли\n' +
            '\n' +
            'Таким образом, всё это просто куча едва работающего кода, добавленного поверх ранее написанного едва работающего кода. Он продолжает расти в размерах и сложности, уменьшая шансы на изменения.\n' +
            '\n' +
            'Чтобы иметь здоровую экосистему, необходимо вернуться. Необходимо иногда выбрасывать хлам и заменять его лучшими альтернативами.\n' +
            '\n' +
            '\n' +
            '\n' +
            'Но у кого есть на это время? Новые ядра ОС не выходили сколько, 25 лет? Это сейчас стало слишком сложным, чтобы просто взять и переписать. В браузерах накопилось столько пограничных ситуаций и исторических прецедентов, что никто не осмелится писать движок с нуля.\n' +
            '\n' +
            'Сегодняшнее определение прогресса — или подбросить топлива:\n' +
            '\n' +
            '@sahrizv: 2014 — нужно внедрить микросервисы для решения проблем с монолитами.\n' +
            '2016 — нужно внедрить Docker, чтобы решить проблемы с микросервисами.\n' +
            '2018 — нужно внедрить Kubernetes, чтобы решить проблемы с Docker.\n' +
            '\n' +
            'или изобретать велосипед:\n' +
            '\n' +
            '@dr_c0d3: 2000: напишите 100 строк XML, чтобы «декларативно» настроить сервлеты и EJB.\n' +
            '2018: напишите 100 строк YAML, чтобы «декларативно» настроить микросервисы.\n' +
            'В XML были хотя бы схемы…\n' +
            '\n' +
            'Мы застряли, и никто нас не спасёт.\n' +
            '\n' +
            'Бизнесу всё равно\n' +
            '\n' +
            'Пользователям тоже. Они выучились принимать то, что мы делаем. Мы (инженеры) говорим, что каждое приложение для Android занимает 350 МБ? Хорошо, они будут с этим жить. Мы говорим, что не можем обеспечить плавную прокрутку? Окей, они свыкнутся с телефоном, который подтормаживает. Мы говорим: «Если не работает, перезагрузитесь»? Они перезагрузятся. Ведь у них нет выбора.\n' +
            '\n' +
            'Конкуренции тоже нет. Все строят одни и те же медленные, раздутые, ненадёжные продукты. Случайный скачок вперёд по качеству даёт конкурентное преимущество (iPhone/iOS против других смартфонов, Chrome против других браузеров) и заставляет всех перегруппироваться, но ненадолго.\n' +
            '\n' +
            'Наша миссия как инженеров — показать миру потрясающие возможности современных компьютеров с точки зрения производительности, надёжности, качества и удобства использования. Если нам не всё равно, люди потянутся. И никто кроме нас не покажет им, что такое возможно. Если только нам не наплевать.\n' +
            '\n' +
            'Не всё так плохо\n' +
            '\n' +
            'Иногда на пасмурном небосводе просвечивают лучики надежды.\n' +
            '\n' +
            'Работа Мартина Томпсона (LMAX Disruptor, SBE, Aeron) впечатляет, она освежающе проста и эффективна.\n' +
            '\n' +
            'Редактор Xi Рафа Левиена, кажется, построен на правильных принципах.\n' +
            '\n' +
            'Джонатан Блоу для своей игры разработал язык компилирования, который компилирует 500 000 строк в секунду на ноутбуке. Это холодная компиляция, никакого промежуточного кэширования, никаких инкрементальных билдов.\n' +
            '\n' +
            'Не нужно быть гением, чтобы писать быстрые программы. Здесь нет какой-то магии. Единственное, что требуется, — это не строить софт на базе огромной кучи дерьма, которую поставляют современные инструменты.\n' +
            '\n' +
            'Манифест лучшего мира\n' +
            '\n' +
            'Я хочу видеть прогресс. Я хочу перемен. Чтобы современное программное обеспечение совершенствовалось, а не стояло на месте. Я не желаю заново изобретать одно и то же, каждый раз выпуская всё более медленный и раздутый продукт. Я хочу во что-то верить — в достойную цель, в будущее, которое лучше, чем то, что мы имеем сегодня, и чтобы появилось сообщество инженеров, которые разделяют это видение.\n' +
            '\n' +
            'Что мы имеем сегодня — это не прогресс. Мы едва достигаем бизнес-целей с этими плохими инструментами. Мы застряли в локальном оптимуме, и никто не хочет двигаться. Это даже не хорошее место, оно раздутое и неэффективное. Мы просто как-то привыкли к нему.\n' +
            '\n' +
            'Поэтому я хочу заявить: нынешняя ситуация — полное дерьмо. Как инженеры, мы можем и должны, и сделаем лучше. У нас могут быть лучшие инструменты, мы можем создавать лучшие приложения, более быстрые, предсказуемые, более надёжные, использующие меньше ресурсов (на порядки меньше!). Мы должны глубоко понять, что мы делаем и почему. Мы должны выпускать продукты надёжно, предсказуемо, с самым высоким качеством. Мы можем и должны гордиться нашей работой. Не просто «учитывая то, что у нас было...» — никаких оговорок!\n' +
            '\n' +
            'Надеюсь, я не одинок. Надеюсь, что есть люди, которые хотят того же. Я буду рад, если мы хотя бы начнём говорить о том, насколько абсурдно нелепа нынешняя ситуация в индустрии программного обеспечения. А потом, возможно, придумаем, как выбраться из неё.')
    })
    $('#sample7').click( function() {
        textarea.html('Жуков Михаил Сергеевич,\n' +
            '\n' +
            'аспирант Института информационных проблем РАН.\n' +
            '\n' +
            'Согласно литературным данным [Streiter et al., 1999; Zarqauwi, 2005] оценка веб-браузеров невозможна без управления переполнением. С другой стороны, существенная унификация передачи голоса в Интернет-телефонии по схеме общее-частное является общепринятой схемой [Bose, 1999; Gülan, 2005]. Это противоречие разрешается тем, что SMPs может быть сконструирован как стохастический, кэшируемый и вкладываемый.\n' +
            '\n' +
            'Согласно общепринятым представлениям, имитация Часов Лампорта не может быть реализована в отсутствие активных сетей [Lamport et al., 2002; Daubechies et al., 1999]. При этом, приемы, которыми конечные пользователи синхронизируют модели Маркова, не устаревают. Основная проблема при этом – необходимость унификации виртуальных машин и теории в истинном масштабе времени [Aguayo et al., 2003]. До какой степени могут быть реализованы веб-браузеры, достигающие этой цели?\n' +
            '\n' +
            'Обычные методы эмуляции Smalltalk, проложившего путь для исследования растрирования, в этой области неприменимы [Gayson, 2002]. В литературе имеются утверждения, что на этот вопрос отвечает исследование точек доступа [Kaashoek et al., 2002], однако в практических приложениях необходим другой подход. Следует отметить, что, хотя алгоритм типа «Корчеватель» (Rooter) выполняется за время Ω (log log n), недостаток этого решения состоит в том, что компиляторы и суперстраницы обычно несовместимы. Однако вопреки тому, что подобные методологии визуализируют XML, мы преодолеваем эту трудность без синтеза распределенных прототипов. Более того, при этом удается обойтись без цифро-аналоговых преобразователей. Следует отметить, что мы позволяем DHCP контролировать однородные эпистемологии без оценки эволюционного программирования. Напротив, буфер хранения не решает всех задач конечных пользователей. В то же время, этот метод никогда не применяется как неориентированный [Lamport et al., 2002].\n' +
            '\n' +
            'В настоящем исследовании не обсуждается вопрос о том, являются ли симметричное шифрование и экспертные системы существенно несовместимыми, а вводятся новые гибкие симметрии (Корчеватель). Действительно, активные схемы и виртуальные машины уже давно объединяют таким образом [Gayson, 2000]. Основной принцип этого решения – усовершенствование общей схемы. Недостаток же этого типа подходов состоит в том, что ключевая пара «общественное-частное» (public-private) и красно-черные деревья редко совместимы, поскольку обычные методы визуализации RPCs не могут быть применены в этой области [Johnson and Jackson, 2001]. Тем самым, нет причин игнорировать электронные модальности как одно из средств для оценки улучшения иерархических баз данных.\n' +
            '\n' +
            'Дальнейшее изложение построено по следующему плану. Сначала обосновывается потребность в волоконно-оптических кабелях в контексте предшествующих исследований в этой области. Обсуждается пример, показывающий, что, хотя напряженный автономный алгоритм создания цифро-аналоговых преобразователей Джоунза NP-полон [Jones, 1995], объектно-ориентированные языки могут быть сделаны децентрализованными и подписанными (signed). Это позволяет обойти упомянутые выше возражения.\n' +
            '\n' +
            'Применение аналогичного подхода для решения основной задачи, показывает, что общепринятый алгоритм для исследования роботов Сато и др. [Сато и др., 1986] выполняется за время Ω (n log n). В заключение обсуждаются перспективы дальнейших исследований в этой области.\n' +
            '\n' +
            'Предлагаемый подход обладает рядом принципиальных особенностей. Рассмотрим раннюю методологию Мартина и Смита [обзор см. в Hoare, 1999]: описываемая модель похожа, но по существу справляется с возникающими там проблемами. Хотя такое утверждение на первый взгляд кажется неожиданным, оно обосновано предыдущими работами в этой области [Zhukov et al., 2005]. Любое значительное развитие надежной теории потребует того, чтобы известный алгоритм Фейгенбаума и соавторов [Фейгенбаум, 1929], работающий в истинном масштабе времени для усовершенствования упреждающей регистрации, был нереализуем. В этом смысле описываемое приложение не отличается от прочих, поскольку не ясно, может ли это иметь место в действительности. Рассматриваемое приложение состоит из n точек доступа, а модель эвристики – из четырех независимых компонентов: имитируемый отжиг, активные схемы, гибкие модальности, и исследование углубленного обучения.\n' +
            '\n' +
            'Предложен алгоритм, состоящий из n семафоров. Любой недоказанный синтез интроспективных методологий безусловно потребует того, чтобы хорошо известный надежный алгоритм Zheng [Zhou et al., 2005] для исследования рандомизированных алгоритмов находился в Co-NP. Несложно показать, что это выполняется и для рассматриваемого приложения. Тем самым, возникает вопрос, удовлетворит ли Корчеватель всем этим допущениям? Оставляя действительность в стороне, цель настоящего исследования состоит в том, чтобы изучить на методическом уровне, как Корчеватель мог бы вести себя в теории. Кроме того, сравнение с ранней архитектурой Сато [Сато и др., 1986] показывает, что предложенная методология похожа, но фактически достигнет этой цели вопреки результатам Стрейтера [Streiter et al., 1999]. Это позволяет опровергнуть утверждение о том, что экспертные системы могут быть амбивалентными, высокодоступными и с линейным временем. Детали приводятся в препринте [Жуков и др., 2007].\n' +
            '\n' +
            'Предложенный подход был реализован как низкоэнергетический, байесовский и интроспективный. 91 C-файл содержит около 8969 строк на Smalltalk. Корчеватель требует корневого доступа, чтобы определить местоположение мобильной связи. В настоящее время алгоритм еще не оптимизирован по сложности, но это должно быть технически просто, как только мы закончим проектирование демона сервера. В целом алгоритм незначительно увеличивает накладные расходы и сложность существующих приспособительных конструкций.\n' +
            '\n' +
            '\n' +
            '\n' +
            'Рис. 1. Отношение между системой Корчеватель и ключевой парой общее-частное.\n' +
            '\n' +
            '\n' +
            '\n' +
            'Рис. 2. Схема, использованная в методологии Корчеватель.\n' +
            '\n' +
            '\n' +
            'Описанный в этом разделе метод оценки может быть полезен сам по себе. Суммарная оценка позволяет доказать три гипотезы:\n' +
            '\n' +
            '1) что можно регулировать время поиска конструкции;\n' +
            '\n' +
            '2) что фон-неймановские машины больше не влияют на производительность;\n' +
            '\n' +
            '3) что персональный компьютер IBM-Junior прошлого 2007 года фактически проявляет лучшую энергию, чем аппаратные средства этого 2008 года.\n' +
            '\n' +
            'Тем самым, этот раздел проливает свет на развитие компьютера UNIVAC в работах Хартманиса [Hartmanis, 1997, Ullman et al., 1998].\n' +
            '\n' +
            '\n' +
            '\n' +
            'Рис. 3. Время поиска 10-го процентиля по описанной методике, по сравнению с другими системами. По горизонтальной оси – время с 1977 (терафлопы). По вертикальнй оси – рабочая нагрузка (количество ЦПУ).\n' +
            '\n' +
            '\n' +
            '\n' +
            'Рис. 4. Топологически эффективные алгоритмы с двумя узлами. По гориэонтальной оси поток запросов (МБ/сек). По вертикальной оси – время с 1993 (человеко-часы). Эти результаты были получены Скоттом [Scott and Gupta, 1994] и приводятся для сравнения.\n' +
            '\n' +
            '\n' +
            'Конфигурация аппаратного оборудования и программного oбеспечения.\n' +
            'Для понимания происхождения приводимых результатов следует знать использованную конфигурацию сетей. Было проведено развертывание на сети перекрытия NSA планетарного масштаба для изучения взаимно широкомасштабного поведения исчерпывающих прототипов. Во-первых, эффективное пространство оптического диска мобильных телефонов было разделено пополам для лучшей оценки средней латентности использованных компьютеров типа desktop. Это противоречит общепринятым подходам, но оказалось полезным в данном исследовании. В результате удалось сократить вдвое отношение «сигнал–шум» для мобильных телефонов. Во-вторых, скорость кассетного лентопротяжного устройства испытательного полигона с 1000 узлами DARPA была утроена. В-третьих, пространство ОЗУ вставленного испытательного полигона для доказательства коллективно надежного поведения слабо насыщенных топологически шумных модальностей было утроено, а скорость оптического диска масштабируемого кластера – удвоена. Наконец, была уменьшена вдвое производительность эффективного жесткого диска мобильных телефонов Intel.\n' +
            '\n' +
            'Построение адекватной программной среды потребовало существенных усилий, но, в конечном счете, оказалось вполне оправданным.\n' +
            '\n' +
            'Сервер ввод-вывода рассеивания и сбора был реализован в Simula-67, увеличенном за счет расширений, сведенных в конвейер. Вычислительные эксперименты показали, что автоматизация параллельных 5.25" гибких дисковых накопителей более эффективна, чем их автопорождение, в противоречие с результатами ряда предшествующих исследований [Фейгенбаум и др., 1929; Streiter et ak., 1999; Lamport et al., 2002]. Одной из причин этого может быть то, что другие исследователи не смогли обеспечить эту функциональность.\n' +
            '\n' +
            'Экспериментальные результаты.\n' +
            'Были ли оправданы большие усилия, которые потребовавшиеся в данной реализации? По-видимому, да. Было проведено четыре новых опыта:\n' +
            '\n' +
            '1) метод был протестирован на настольных компьютерах, причем особое внимание обращалось на ключевую производительность USB;\n' +
            '\n' +
            '2) проведено сравнение производительности в операционных системах Микрософт Windows Longhorn, Ultrix и Микрософт Windows 2000;\n' +
            '\n' +
            '3) 64 PDF 11 были развернуты по всей сети Интернета и проверена чувствительность к эффекту «византийского дефекта»;\n' +
            '\n' +
            '4) выполнено 18 попыток с имитируемой рабочей нагрузкой WHOIS и результаты сравнены с имитацией обучающего программного обеспечения.\n' +
            '\n' +
            '\n' +
            '\n' +
            'Рис. 5. Зависимость характерного поведения от латентности. Горизонтальная ось – латентность (байты). Вертикальная ось – отношение сигнал-шум (nm). Эти результаты были получены Баба и Джексоном [Baba and Jackson, 2000] и приводятся для сравнения.\n' +
            '\n' +
            '\n' +
            '\n' +
            'Рис. 6. Ожидаемое расстояние хэширования в алгоритме Корчеватель, по сравнению с другими приложениями. Горизонтальная ось – латентность (Цельсий). Горизонтальная ось – время поиска (цилиндры).\n' +
            '\n' +
            '\n' +
            'Перейдем теперь к основному анализу второй половины проведенных тестов. Кривая на рисунке 4 должна выглядеть знакомой; она лучше известна как gij(n) = n. Следует обратить внимание, на то, что развертывание 16-разрядной архитектуры, скорее, чем эмуляция ее в программном обеспечении, приводит к менее зубчатым и более воспроизводимым результатам. Следует иметь в виду, что рисунок 6 показывает среднюю ожидаемую сложность, а не среднюю исчерпывающую сложность. Рассмотрим теперь тесты (3) и (4), описанные выше и показанные на рисунке 4. Точность результатов в этой фазе исследования оказалась приятной неожиданностью. Далее, кривая на рисунке 3 также уже известна как Н\'(n) = n. В этом аспекте многие разрывы в графах указывают на размер заглушенного блока, введенного при нашем усовершенствовании аппаратных средств. Наконец, рассмотрим опыты (1) и (3). Многие разрывы в графах указывают на продублированную среднюю ширину полосы частот, введенную при усовершенствовании аппаратных средств. В соответствии с этим кривая на рисунке 3 приближается функцией F*(n) = log 1.32т. Наконец, данные на рисунке 6, показывают, что на этот проект были израсходованы четыре года тяжелой работы.\n' +
            '\n' +
            'Близкие подходы рассматривались на 6-м симпозиуме NASMTI [Westerson, 2005; Zarqawi, 2005; Shenkrishnan, 2005]; аналогичные результаты получил Гюлан [Gülan, 2005]. Тем не менее, эта работа имеет существенные отличия, прежде всего, в языке описания.\n' +
            '\n' +
            'Среди других подходов, применявшихся в данной области, следует отметить имитацию байесовскую информацию либо для исследования Закона Мура [Hoare, 1999], либо для улучшения шины памяти.\n' +
            '\n' +
            'Перечисление указанных работ, относящихся к делу, поддерживает предложенное использование Часов Лампорта [Lamport et al., 2002]. Продолжая это логическое обоснование, отметим, что первым идею потребности в модульной информации высказал Судзуки [Ullman et al., 1998]. Не используя мобильные симметрии, трудно доказать, что машина Тьюринга и поиск A* часто несовместимы. Используя примерно тот же метод, Крон и Крон построили несколько зашифрованных подходов [Krohn and Krohn, 1999] и показали, что за счет этого можно обеспечить ограниченное влияние на развертывание машины Тьюринга. Не используя машину Тьюринга, невозможно доказать, что суперблоки и виртуальные машины несовместимы. С другой стороны, эти решения полностью ортогональны нашему методу.\n' +
            '\n' +
            'В литературе были предложены несколько амбиморфных и многорежимных приложений. Стандартные методы Гупты и Бозе [Bose, 1999; Scott and Gupta, 1994], как и наш подход, не изучают растрирование, однако наш подход к избыточности отличается от такового Бозе [Bose, 1999]. Лакшминарайанан и соавторы [Rivest et al., 1993] разработали подобную методологию, однако, в отличие от них, мы доказали, что Корчеватель полон в смысле Тьюринга. Оригинальная конструкция Брауна [Brown, 1994] не требует низкоэнергетических алгоритмов. Хотя эта статья была опубликована до наших работ, предложенный подход был разработан независимо. Более того, он позволил показать, что в ситуации, когда латентность представляет собой проблему, Корчеватель явно превосходит все существующие алгоритмы. Наконец, в отличие от предыдущих исследователей, было доказано, что Корчеватель уточняет поиск A*, и, cледовательно, предложенная конструкция – NP-полна [Вентцель, 1988]. Тем самым, рассмотренная задача была решена полностью.\n' +
            '\n' +
            '\n' +
            'В настоящей работе описан алгоритм Корчеватель, предназначенный для анализа растрирования, приведены его теоретические и практические рабочие характеристики – сложность по времени и по памяти, время выполнения в стандартных тестах. Проведено сравнение с другими ранее предложенными алгоритмами. Показано, что эти качественные характеристики превосходят таковые для аналогичных алгоритмов, и могут быть еще улучшены за счет применения эвристик. Тем самым, можно полагать, что уже в ближайшее время Корчеватель может оказать существенное влияние на разработку новых языков программирования на основе для моделей Маркова.\n' +
            '\n' +
            '\n' +
            'Благодарности.\n' +
            'Я благодарен профессору М.С.Гельфанду, привлекшему мое внимание к проблеме публикации случайных текстов, д.ф.-м.н. Б.Е.Штерну за внимание к работе, Дж.Стриблингу за использование текста, порожденного SciGen и к.филол.н. Л.Л.Иомдину за использование системы «Этап-3». Эта работа была частично поддержана ООО «Тровант».\n' +
            '\n' +
            '\n' +
            'Литература\n' +
            'Править\tShortUrl\tВнутренняя ссылка\n' +
            'Вентцель Е.С. Исследование операций. М.: Наука, 1988.\n' +
            'Жуков М.С., Петухов В.В., Гельфанд М.С. Некоторые вопросы проблемы генерации случайных текстов. Препринт ИИП РАН № 137 (2007).\n' +
            'Сато М., Судзуки К., Оно Х. Нитиэй кикай хонъяку сисутэму Thalia-3. Мицубиси дэнки гихо 60 (1986) No. 3, с. 37-40.\n' +
            'Фейгенбаум Е.Е., Финкельштейн А.С., Файнциммер И.А. Некоторые подходы к решению алгорифмических задач. Доклады АН СССР 12 (1929), 121–117.\n' +
            'Aguayo D., Krohn M., Stribling J., Corbato F. A case for 802.11b. Journal of Automated Reasoning 904 (Sept. 2003), 89–106.\n' +
            'Baba J., Jackson Y. Red-black trees considered harmful. TOCS 617 (Aug. 2000), 19–28.\n' +
            'Bose T. Deconstructing public-private key pair with DewyProser. In Proceedings of the Workshop on Atomic and Permutable Methodologies (Sept. 1999).\n' +
            'Brown T. Decoupling I/O automata from access points in model checking. In Proceedings of PLDI (June 1994).\n' +
            'Daubechies I., Aguato D., Patterson D. A methodology for the synthesis of active networks. In Proceedings of OOPSLA (Mar. 1999).\n' +
            'Gayson M. The impact of distributed symmetries on machine learning. Journal of Extensible Methodologies 6 (Aug. 2000), 1–13.\n' +
            'Gülan G. I/O automata no longer considered harmful. Proc. 3rd Int. Symp. of Interactive Media Design (2005), 103-107.\n' +
            'Hartmanis J. A methodology for the synthesis of e-business. In Proceedings of ECOOP (Aug. 1997).\n' +
            'Hoare C. Moore’s Law considered harmful. Journal of Lossless Models 17 (Jan. 1999), 1–14.\n' +
            'Kaashoek M. F., Aguayo D., Lamport L. Synthesizing DNS using trainable configurations. In Proceedings of ECOOP (Dec. 2002).\n' +
            'Johnson J., Jackson Y. Red-black trees no longer considered harmful. TOCS 567 (Aug. 2001), 1–18.\n' +
            'Jones Q., Kumar Z., Kahan W. Deconstructing massive multiplayer online role-playing games. In Proceedings of VLDB (Nov. 2002).\n' +
            'Krohn M., Krohn M. A refinement of Boolean logic with SoddyPort. In Proceedings of FOCS (Oct. 1999).\n' +
            'Lamport L., Kobayashi P., Stearns R., Stribling J. Dag: A methodology for the emulation of simulated annealing. In Proceedings of ASPLOS (Oct. 2002).\n' +
            'Rivest R., Sasaki I., Lakshminarayanan R. Electronic, perfect archetypes for cache coherence. NTT Techincal Review 47 (Feb. 1993), 1–14.\n' +
            'Scott J., Gupta P. Decoupling multicast applications from a* search in checksums. NTT Techincal Review 98 (May 1994), 47–53.\n' +
            'Shenkrishnan F.T. On the study of the Ethernet. 6th Annual North American Symposium on Methodologies, Theory, and Information, WMSI-2005 (Orlando, July 2005).\n' +
            'Streiter O., Iomdin L., Hong M., Hauck U. Learning, Forgetting and Remembering: Statistical Support for Rule-Based MT. Proceedings of the 8th International Conference on Theoretical and Methodological Issues in Machine Translation TMI99 (Aug. 1999), 44–55.\n' +
            'Ullman J.,Milner R., Shastri V.,Brown G., Perlis A. Suzuki B. A visualization of the World Wide Web using FlaggyCold. In Proceedings of the USENIX Technical Conference (Feb. 1998).\n' +
            'Westerson T. Harnessing byzantine fault tolerance using classical theory. 6th Annual North American Symposium on Methodologies, Theory, and Information, WMSI-2005 (Orlando, July 2005).\n' +
            'Zarqawi M. Synthesizing checksums and lambda calculus using Jog. 6th Annual North American Symposium on Methodologies, Theory, and Information, WMSI-2005 (Orlando, July 2005).\n' +
            'Zhou O.M., Zhao H., Papadimitriou C., Zheng S. Deconstructing vacuum tubes. NTT Techincal Review 26 (Feb. 2005), 20–24\n' +
            'Zhukov M.S., Stribling J., Softporn K., Li Y. A study of 32 bit architectures that made developing and possibly evaluating object-oriented languages a reality with Eburin. Journal of Introspective Archetypes 1 (May 2005), 75–89.')
    })
    $('#sample8').click( function() {
        textarea.html('РАЗРАБОТКА ИНФОРМАЦИОННОЙ СИСТЕМЫ ПОДДЕРЖКИ УЧЕБНОГО ПРОЦЕССА КАФЕДРЫ МОЭВМ СПБГЭТУ “ЛЭТИ”\n' +
            'Аннотация\n' +
            'В статье затронута проблема автоматизации деятельности кафедры технического вуза и указана необходимость внедрения информационной системы, позволяющей вести учёт академической и научно-исследовательской деятельности.\n' +
            '\n' +
            'Составлен список пользовательских требований к системе. Выделены критерии сравнения информационных систем, используемых для автоматизации учебной и научной деятельности кафедр.\n' +
            '\n' +
            'Рассмотрены и проанализированы системы-аналоги, их функциональность. По результатам анализа было принято решение о разработке собственной информационной системы с учётом внутренней специфики кафедры.\n' +
            '\n' +
            'Описаны этапы создания прототипа информационной системы, определена архитектура, функциональность и возможности системы. В статье также приведён пример пользовательского интерфейса ИС.\n' +
            '\n' +
            'Описаны планы по дальнейшей реализации, внедрению и усовершенствованию информационной системы.\n' +
            '\n' +
            'Введение\n' +
            'В наши дни в условиях развития информационных технологий для вузов особую актуальность имеет автоматизация рутинной деятельности. Применение компьютерных технологий упрощает работу персонала, позволяет оптимизировать процесс управления и обеспечить конкурентоспособность вуза. Работа с контингентом студентов в вузе является одной из главных задач, подлежащих автоматизации.\n' +
            '\n' +
            'Кафедра является основным производственным подразделением вуза. Помимо академической деятельности, сотрудники кафедры участвуют в научной и методической работе. Для выпуска качественно обученных специалистов, востребованных на рынке труда, необходимо эффективное управление ресурсами. Это возможно при должной информационной поддержке.\n' +
            '\n' +
            'К основным задачам кафедры относятся:\n' +
            '\n' +
            'Реализации основных и дополнительных образовательных программ обучении по профилю кафедры.\n' +
            'Организация и проведение учебной, методической, научно-исследовательской, воспитательной работы.\n' +
            'Подготовка научно-педагогических кадров путем обучения преподавателей в аспирантуре, докторантуре, а также повышения квалификации.\n' +
            'Формирование комплекса нормативно-правовой, учебно-методической, планово-отчётной и иной документации, обеспечивающей работу кафедры.\n' +
            'По всем выше перечисленным видам деятельности требуется периодическая отчётность. На данный момент на кафедре МОЭВМ СПбГЭТУ “ЛЭТИ” составление отчётов не автоматизировано, выполняется вручную и является рутинной деятельностью, что негативно сказывается на эффективности деятельности кафедры. Предметом рассмотрения данной статьи является автоматизация деятельности кафедры при помощи информационной системы для повышения эффективности управления ресурсами.\n' +
            '\n' +
            'Учебный план в свою очередь формирует содержательное наполнение кафедрального учебного процесса и в конечном итоге определяет качество образовательной деятельности на уровне кафедры вуза. Учёт и анализ результатов научно-исследовательской работы профессорско-преподавательского состава вуза становится всё более актуальной задачей в деятельности вуза.\n' +
            '\n' +
            'Известно, что многие вузы используют специализированные системы для автоматизации части деятельности кафедр. Но недостатком этих систем является то, что каждый вуз имеет свою структуру, особенности, свои внутренние стандарты.\n' +
            '\n' +
            'Целью данной работы является разработка информационной системы для автоматизации деятельности кафедры.\n' +
            '\n' +
            'В связи с этим, были поставлены следующие задачи:\n' +
            '\n' +
            'сформулировать пользовательские требования к системе;\n' +
            'провести анализ приложений и информационных систем, используемых для автоматизации деятельности кафедр;\n' +
            'спроектировать архитектуру информационной системы;\n' +
            'разработать пользовательский интерфейс и прототип системы.\n' +
            'Сравнение аналогов\n' +
            'Качественный анализ аналогов системы позволит познакомиться с чужим опытом разработки и внедрения. В качестве аналогов рассматриваются существующие информационные системы, используемые кафедрами российских вузов.\n' +
            '\n' +
            'Принцип отбора аналогов\n' +
            'Рассматриваемая информационная система должна удовлетворять пользовательским требованиям, которые описываются следующими функциями:\n' +
            '\n' +
            'учёт студентов, их успеваемость, сдачу курсовых работ, посещения занятий;\n' +
            'учёт научной деятельности сотрудников кафедры: научные публикации, участие в конкурсах/семинарах/НИОКР;\n' +
            'учёт численности аспирантов, докторантов, соискателей и стажёров;\n' +
            'формирование отчётов установленного образца;\n' +
            'разграничение прав доступа на основе ролей.\n' +
            'Информационная система будет использоваться в многопользовательском режиме студентами и сотрудниками кафедры, при этом она должна быть доступна в сети кафедры как на компьютерах с операционной системой (ОС) на базе Linux, так и на компьютерах с ОС Windows.\n' +
            '\n' +
            'Критерии сравнения аналогов\n' +
            'Архитектура информационной системы\n' +
            'Архитектура - принципиальная организация системы, воплощенная в её элементах, их взаимоотношениях друг с другом и со средой, а также принципы, влияющие на проектирование и развитие системы.\n' +
            '\n' +
            'Выбор архитектуры информационной системы стратегически важен, так как данное решение влияет на все этапы жизненного цикла программного обеспечения: от проектирования и разработки, до эксплуатации и сопровождения.\n' +
            '\n' +
            'Также система должна быть доступна в сети кафедры как на компьютерах с операционной системой (ОС) на базе Linux, так и на компьютерах с ОС Windows, что может быть обеспечено наличием дистрибутивов для данных ОС или реализацией в виде веб-приложения.\n' +
            '\n' +
            'Генерация отчётов по заданному шаблону\n' +
            'Одной из главных функций информационной системы кафедры является автоматизация подготовки и предоставления отчётности, например, при подведении ежегодных итогов работы кафедры, проведении самообследования или аккредитации вуза. Данная функция может быть реализована как заполнение заранее заданного шаблона типового текстового документа.\n' +
            '\n' +
            'Условие распространения и открытость исходного кода\n' +
            'Использование технологий с открытым исходным кодом, при создании информационной системы, обладает массой преимуществ:\n' +
            '\n' +
            'не требуется приобретение лицензий на программное обеспечение;\n' +
            'прозрачность при обеспечении информационной безопасности;\n' +
            'возможность добавления дополнительной функциональности собственными силами.\n' +
            'Информационная система кафедры ГИС НГТУ\n' +
            'В статье "Современные методы построения информационных систем: Программный комплекс «Информационная система кафедры ГИС»" [1] рассматривается современный метод построения информационных систем с точки зрения архитектуры, а именно сервис-ориентированная архитектура (SOA - service-oriented architecture). Приводятся следующие достоинства выбранной архитектуры:\n' +
            '\n' +
            'многоуровневость, с разделением функциональности по уровням;\n' +
            'ликвидация дублирования функциональности ПО;\n' +
            'стандартизация интерфейсов модулей.\n' +
            'Языком реализации ИС является Java, а в качестве СУБД используется MySQL. Java и MySQL имеют свободно распространяемые версии под различные операционные системы. Данный программный комплекс является внутренним продуктом кафедры.\n' +
            '\n' +
            'В статье приводится структура ИС в виде списка модулей и их назначений. Реализуемая в системе функциональность полностью покрывает необходимую нам, а также содержит модуль “ЭУМК” (электронные учебно-методические комплексы), ответственный за хранение электронных учебных методических указаний, добавляемых преподавателями и доступных студентам.\n' +
            '\n' +
            'Информационная система «Студент» ВГТУ\n' +
            'В статье "Информационная система «Студент» выпускающей кафедры высшего учебного заведения (Воронежский государственный технический университет, Россия)" [2] рассматривается главная задача, решаемая информационной системой и результат внедрения системы. По мнению автора статьи, одним из недостатков существующих систем является отсутствие унифицированной структуры вузов, ввиду специфических особенностей и собственных внутренних стандартов.\n' +
            '\n' +
            'Сформулированы следующие задачи, решаемые системой:\n' +
            '\n' +
            'сохранение данных о студентах и их успеваемости;\n' +
            'формирование печатных форм при проведении зачётов и экзаменов, генерация сводных итогов по успеваемости;\n' +
            'реализация быстрого поиска данных, их удобное отображение;\n' +
            'упрощение подготовки отчётов, путём интеграции со стандартными офисными продуктами.\n' +
            'Сама информационная система представляет собой совокупность desktop-приложения и базы данных, а работа с рассматриваемой ИС происходит в диалоговом режиме, путём заполнения форм. В статье приведены названия форм и информация, вводимая на них. Из самого названия системы очевидно, что система предназначена для работы с информацией только о студентах, что не в полной мере реализует необходимую нам функциональность.\n' +
            '\n' +
            'В процессе работы программы формируется отчетная документация в формате текстового редактора Microsoft Word. Отчёты оформляются в соответствии с требованиями архивного хранения и документальных ревизий наравне с традиционными документами учёта, контроля и анализа неисправностей. Система позволяет получить отчёты трёх типов:\n' +
            '\n' +
            'Анкета студента.\n' +
            'Список группы.\n' +
            'Ведомости.\n' +
            'Языком реализации ИС является Delphi, а в качестве СУБД используется MS SQL Server 2005. MS SQL Server 2005 имеет свободно распространяемую версию, однако только для платформы Windows и имеет ряд ограничений применения.\n' +
            '\n' +
            'Подсистема обработки и хранения данных информационной системы мониторинга деятельности кафедры\n' +
            'В статье "Программная реализация подсистемы обработки и хранения данных информационной системы мониторинга деятельности кафедры" [3] автор обращает внимание на то, что существующие системы не всегда удовлетворяют потребностям и не учитывают специфику учебного заведения, а также не в полной мере уделяют внимание учёту деятельности кафедры. В статье рассматривается информационная система мониторинга (ИСМ), позволяющая получать актуальные данные о процессе функционирования кафедры, проводить анализ и прогнозирование вариантов развития событий, что обеспечивает серьезную информационную поддержку процесса принятия решений по вопросам управления кафедрой.\n' +
            '\n' +
            'В состав рассматриваемой ИСМ входят 5 подсистем: подсистема ввода и валидации данных, подсистема формирования отчётности, подсистема мониторинга, подсистема администрирования, а также подсистема обработки и хранения данных, рассматриваемая в статье.\n' +
            '\n' +
            'Подсистема обработки и хранения данных состоит из следующих модулей:\n' +
            '\n' +
            'модуль экспорта данных — реализует передачу данных из ИСМ в сторонние системы, а также предоставляет интерфейс для резервного копирования данных;\n' +
            'модуль импорта данных — используется для автоматизированного ввода данных в ИСМ из корпоративных информационных систем, например, систем электронного документооборота, таких как Е1 Евфрат, DIRECTUM;\n' +
            'модуль загрузки и очистки данных — похож на модуль импорта данных, но обрабатывает данные из различных БД (поддерживает формат Microsoft Access и Microsoft SQL Server) и документов форматов Microsoft Office Word и Excel, Comma Separated Value (.csv) и ограничено XML;\n' +
            'модуль изменения данных — инкапсулирует всю бизнес-логику работы с реляционной базой данных;\n' +
            'модуль формирования структуры реляционной БД — содержит код на языке SQL для задания структуры реляционной БД;\n' +
            'модуль формирования структуры многомерной базы данных (МБД) — содержит код на языке XML для задания структуры МБД.\n' +
            'Далее в статье описывается последовательность действий, производимых подсистемой при импорте данных и технические детали реализации в виде списка классов.\n' +
            '\n' +
            'Языком реализации ИС является C#, а в качестве СУБД используется Microsoft Access и Microsoft SQL Server. В отличие от упоминавшейся ранее Microsoft SQL Server, Microsoft Access не имеет свободно распространяемой версии и работает только для платформы Windows. Таким образом, данная система не в полной мере соответствует предъявляемым нами требованиям.\n' +
            '\n' +
            '«ППС УГТУ»: методические разработки кафедр\n' +
            'В статье “Разработка модуля информационной системы «ППС УГТУ»: методические разработки кафедр” [4] рассказывается об опыте создания модуля информационной системы кафедры для учёта учебно-методической работы, включающий много этапов:\n' +
            '\n' +
            'предпроектный анализ в виде анализа бизнес-процессов на кафедре;\n' +
            'построение диаграммы потоков данных;\n' +
            'обзор аналогов;\n' +
            'проектирование модели базы данных;\n' +
            'реализация приложения;\n' +
            'демонстрация интерфейса пользователя.\n' +
            'Данная система была реализована в виде web-приложения на базе платформы ASP.NET, а в качестве СУБД используется Microsoft SQL Server 2014. Данная СУБД имеет свободно распространяемую версию, однако только для платформы Windows и имеет ряд ограничений применения, в то время как платформа .NET имеет открытую кроссплатформенную реализации для Windows и Linux.\n' +
            '\n' +
            'Предоставляемая рассмотренной системой функциональность не в полной мере реализует необходимую нам, так как акцент в ней, сделан на работу с информацией только о методической работе.\n' +
            '\n' +
            '1С:Университет ПРОФ\n' +
            'Рассмотрим решение «1С:Университет ПРОФ»[5] на базе платформы «1С:Предприятие 8», так как оно охватывает все необходимые виды деятельности.\n' +
            '\n' +
            '«1С:Университет ПРОФ» – комплексное решение для автоматизации управленческой деятельности в образовательных организациях высшего образования. Решение позволяет автоматизировать: прием в вуз, планирование учебного процесса, расчет и распределение учебной нагрузки, управление контингентом студентов, учет успеваемости и посещаемости, воинский учет, формирование приказов, справок и отчетности, формирование документов об образовании и о квалификации, расчет стипендиального обеспечения, организацию трудоустройства студентов и выпускников, формирование регламентированной отчетности, управление научно-исследовательской деятельностью и инновациями, управление аспирантурой и докторантурой, поддержку работы диссертационных советов, составление расписания занятий, управление довузовским и дополнительным образованием, управление кампусом вуза, а также бухгалтерский и хозяйственный учёт.\n' +
            '\n' +
            'Все основные компоненты платформы способны функционировать под управлением как операционной системы Windows, так и Linux. Веб-клиент может работать под управлением операционных систем Windows и Linux, а также на компьютерах под управлением Mac OS X. При внедрении системы это обеспечивает возможность выбора архитектуры, на которой будет работать система, и позволяет использовать открытое программное обеспечение для работы сервера и базы данных.\n' +
            '\n' +
            'В основном используется, клиент-серверный вариант, реализован на основе трехуровневой архитектуры «клиент-сервер»:\n' +
            '\n' +
            'клиентская часть «1С:Предприятие 8»;\n' +
            'кластер серверов «1С:Предприятие 8»;\n' +
            'сервер баз данных.\n' +
            'Данная система является наиболее полной и всеобъемлющей, однако реализуемые системой функции являются избыточными при автоматизации деятельности одной кафедры. Помимо этого, для создания и настройки отчёта, требуется знание встроенного языка программирования 1С и языка запросов 1С, что потребует найма программиста 1С.\n' +
            '\n' +
            'Данное решение имеет закрытый исходный код, так как является коммерческим, однако имеет пробную версию. Внедрение «1С:Университет ПРОФ» увеличит накладные расходы, так как требуется покупка лицензии и дополнительная комплектация штата кафедры программистом 1С.\n' +
            '\n' +
            'Выводы по итогам сравнения\n' +
            'Несмотря на существование такой системы как «1С:Университет ПРОФ», претендующей на звание отраслевого стандарта, некоторые кафедры и университеты зачастую реализуют собственные информационные системы. Рассмотренные решения в основном являются внутренними продуктами кафедр и университетов и не имеют открытого кода, что делает невозможным самостоятельное расширение функциональности системы. Поэтому было принято решение о разработке собственной ИС с открытым кодом, с учётом специфики деятельности кафедры.\n' +
            '\n' +
            'Таблица 1\n' +
            '\n' +
            'Архитектура информационной системы\tГенерация отчётов по заданному шаблону\tУсловие распространения ПО и открытость исходного кода\n' +
            'Информационная система кафедры ГИС НГТУ\tCервис-ориентированная архитектура\tПрисутствует, формат не указан\tЯвляется внутренним продуктом университета\n' +
            'Информационная система «Студент» ВГТУ\tАрхитектура файл-сервер\tОтчёты в формате Microsoft Word\tЯвляется внутренним продуктом университета\n' +
            'Подсистема обработки и хранения данных информационной системы мониторинга деятельности кафедры\tЯвляется частью веб-приложения\tОтсутствует\tЯвляется внутренним продуктом университета\n' +
            '«ППС УГТУ»: методические разработки кафедр\tТрехуровневая архитектура «клиент-сервер»\tПрисутствует, формат не указан\tЯвляется внутренним продуктом университета\n' +
            '1С:Университет ПРОФ\tТрехуровневая архитектура «клиент-сервер»\tОтчёты в формате Microsoft Word, Excel\tПлатная лицензия и коммерческая поддержка, наличие бесплатного пробного периода\n' +
            'Выбор метода решения\n' +
            'После принятия решения о разработке собственной системы, были составлены требования к используемым инструментам, с учётом пожеланий и предложений сотрудников кафедры, которые будут сопровождать данную систему.\n' +
            '\n' +
            'В качестве инструментов при реализации ИС будут использованы:\n' +
            '\n' +
            'для реализации логики - Python 3, так как данный язык программирования хорошо себя зарекомендовал среди сотрудников кафедры;\n' +
            'в качестве СУБД будет использована - MongoDb, так как подобная NoSQL база данных обеспечит гибкость при изменении формата хранения данных;\n' +
            'библиотека Flask для реализации каркаса информационной системы, обеспечения модульности и соответственно расширяемости системы, так как она не налагает дополнительных ограничений на систему.\n' +
            'Система будет реализована в виде веб-приложения с применением трехуровневой архитектуры «клиент-сервер», так как она должна быть доступна в сети кафедры как на компьютерах с операционной системой (ОС) на базе Linux, так и на компьютерах с ОС Windows.\n' +
            '\n' +
            'При проектировании серверной части был применён метод декомпозиции на функциональные модули.Реализуемая ИС будет состоять из следующих модулей:\n' +
            '\n' +
            '“Учёт студентов”\n' +
            'Подсистема “Учёт студентов” отвечает за управление студенческими данными и автоматизацию некоторых аспектов учебного процесса. Данная подсистема позволит студентам следить за своей успеваемостью и упростит сдачу отчетных материалов по предметам. Преподаватели смогут отслеживать посещения и сдачу работ по своим предметам для всех групп студентов.\n' +
            '\n' +
            '“Научная работа”\n' +
            'Подсистема “Научная работа” позволит вести учёт и контроль научной деятельности студентов и профессорско-преподавательского состава кафедры: учёт публикаций/научных трудов, участия (достижений) в конференциях/конкурсах/НИОКР.\n' +
            '\n' +
            '“Индивидуальный план преподавателя”\n' +
            'Подсистема “Индивидуальный план преподавателя” должна предоставлять возможность заполнения и корректировки индивидуального плана, ознакомления с учебными планами других сотрудников, а также перечнем ближайших мероприятий.\n' +
            '\n' +
            'подсистема регистрации/авторизации\n' +
            'Подсистема регистрации/авторизации должна обеспечивать разграничение прав доступа на основе ролей: администратор, преподаватель, студент.\n' +
            '\n' +
            'После проектирования был разработан пользовательский интерфейс, приведённый на рисунке 1, а также прототип информационной системы, в котором реализован каркас ИС, подсистема регистрации/авторизации, вывод списка студентов. Также была составлена пошаговая инструкция по развёртыванию прототипа. При использовании данной информационной системы не требует знания языков программирования. Исходный код прототипа и сама инструкция находятся в репозитории кафедры [6].\n' +
            '\n' +
            'Рисунок 1\n' +
            '\n' +
            'Заключение\n' +
            'В данной статье затрагивается проблема автоматизации деятельности кафедры. Выделены критерии оценки информационных систем, используемых при автоматизации деятельности вуза. Сформулированы пользовательские требования к информационной системе поддержки учебного процесса. Проведён анализ приложений и информационных систем, используемых для автоматизации деятельности кафедр и вузов. Выбрана архитектура, разработан пользовательский интерфейс и прототип информационной системы.\n' +
            '\n' +
            'Существуют дальнейшие планы по дальнейшей реализации, внедрению и усовершенствованию информационной системы:\n' +
            '\n' +
            'более детальное проектирование и реализация модулей “Индивидуальный план преподавателя” и “Научная работа”;\n' +
            'добавление функциональности в модуль “Учёт студентов”: учёт посещаемости, выставление оценок;\n' +
            'развёртывание ИС в тестовом режиме в сети кафедры;\n' +
            'написание документации по использованию и сопровождению ИС.\n' +
            'Список литературы\n' +
            'Мерзляков И. Н., Райкин Л. И., Бойтяков А. А. Современные методы построения информационных систем: программный комплекс «Информационная система кафедры ГИС» //НАУЧНО-ОБРАЗОВАТЕЛЬНАЯ ИНФОРМАЦИОННАЯ СРЕДА XXI ВЕКА. – 2014. – С. 139-142.\n' +
            'Скугорова Я. В. ИНФОРМАЦИОННАЯ СИСТЕМА «СТУДЕНТ» ВЫПУСКАЮЩЕЙ КАФЕДРЫ ВЫСШЕГО УЧЕБНОГО ЗАВЕДЕНИЯ //РОССИЯ И МИРОВОЕ ХОЗЯЙСТВО. – 2008. – С. 25.\n' +
            'Акимов А. А., Бершадский А. М. ПРОГРАММНАЯ РЕАЛИЗАЦИЯ ПОДСИСТЕМЫ ОБРАБОТКИ И ХРАНЕНИЯ ДАННЫХ ИНФОРМАЦИОННОЙ СИСТЕМЫ МОНИТОРИНГА ДЕЯТЕЛЬНОСТИ КАФЕДРЫ //Материалы Всероссийской молодежной конференции" Информационно-телекоммуникационные системы и технологии (ИТСиТ-2012)". – 2012. – С. 5-6.\n' +
            'Королев В. Р., Вокуева Т. А. Разработка модуля информационной системы «ППС УГТУ»: методические разработки кафедр | [Электронный ресурс]. – Режим доступа: http://itue.ru/?p=2037\n' +
            '1С:Университет ПРОФ | [Электронный ресурс]. – Режим доступа: https://solutions.1c.ru/catalog/university-prof\n' +
            'Репозиторий с исходным кодом разработанного прототипа | [Электронный ресурс]. – Режим доступа: https://github.com/moevm/mse_common_moevm')
    })
})